{"version":3,"file":"source.js","sourceRoot":"","sources":["../../../../src/compile/data/source.ts"],"names":[],"mappings":"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","sourcesContent":["import {Data, DataFormatType, isInlineData, isNamedData, isUrlData} from '../../data';\nimport {contains, hash} from '../../util';\nimport {VgData} from '../../vega.schema';\nimport {DataFlowNode} from './dataflow';\n\nexport class SourceNode extends DataFlowNode {\n  private _data: Partial<VgData>;\n\n  private _name: string;\n\n  private _hash: string | number;\n\n  constructor(data: Data) {\n    super(null);  // source cannot have parent\n\n    data = data || {name: 'source'};\n\n    if (isInlineData(data)) {\n      this._data = {values: data.values};\n    } else if (isUrlData(data)) {\n      this._data = {url: data.url};\n\n      if (!data.format) {\n        data.format = {};\n      }\n\n      if (!data.format || !data.format.type) {\n        // Extract extension from URL using snippet from\n        // http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\n        let defaultExtension = /(?:\\.([^.]+))?$/.exec(data.url)[1];\n        if (!contains(['json', 'csv', 'tsv', 'dsv', 'topojson'], defaultExtension)) {\n          defaultExtension = 'json';\n        }\n\n        // defaultExtension has type string but we ensure that it is DataFormatType above\n        data.format.type = defaultExtension as DataFormatType;\n      }\n    } else if (isNamedData(data)) {\n      this._data = {};\n    }\n\n    // any dataset can be named\n    if (data.name) {\n      this._name = data.name;\n    }\n\n    if (data.format) {\n      const {parse = null, ...format} = data.format;\n      this._data.format = format;\n    }\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  public hasName(): boolean {\n    return !!this._name;\n  }\n\n  get dataName() {\n    return this._name;\n  }\n\n  set dataName(name: string) {\n    this._name = name;\n  }\n\n  set parent(parent: DataFlowNode) {\n    throw new Error('Source nodes have to be roots.');\n  }\n\n  public remove() {\n    throw new Error('Source nodes are roots and cannot be removed.');\n  }\n\n  /**\n   * Return a unique identifier for this data source.\n   */\n  public hash() {\n    if (isInlineData(this._data)) {\n      if (!this._hash) {\n        // Hashing can be expensive for large inline datasets.\n        this._hash = hash(this._data);\n      }\n      return this._hash;\n    } else if (isUrlData(this._data)) {\n      return hash([this._data.url, this._data.format]);\n    } else {\n      return this._name;\n    }\n  }\n\n  public assemble(): VgData {\n    return {\n      name: this._name,\n      ...this._data,\n      transform: []\n    };\n  }\n}\n"]}