{"version":3,"file":"properties.js","sourceRoot":"","sources":["../../../../src/compile/legend/properties.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,cAAc,EAAC,MAAM,eAAe,CAAC;AACtD,OAAO,EAAW,UAAU,EAAC,MAAM,gBAAgB,CAAC;AAEpD,OAAO,EAAC,UAAU,EAAY,MAAM,aAAa,CAAC;AAElD,OAAO,EAAC,QAAQ,EAAC,MAAM,YAAY,CAAC;AAEpC,MAAM,iBAAiB,MAAc,EAAE,QAA0B;IAC/D,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;IAE3B,IAAI,IAAI,EAAE;QACR,OAAO,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACnC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,eAAe,CAAO,EAAE,OAAgB,EAAE,SAAoB;IAClE,IACI,cAAc,CAAC,OAAO,CAAC,IAAI,CACzB,CAAC,CAAC,KAAK,cAAc,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAChD,CAAC,CAAC,KAAK,UAAU,IAAI,QAAQ,CAAY,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC,CACtE,EACD;QACF,OAAO,UAAU,CAAC;KACnB;IACD,OAAO,SAAS,CAAC;AACnB,CAAC","sourcesContent":["import {Channel, isColorChannel} from '../../channel';\nimport {FieldDef, valueArray} from '../../fielddef';\nimport {Legend} from '../../legend';\nimport {isBinScale, ScaleType} from '../../scale';\nimport {Type} from '../../type';\nimport {contains} from '../../util';\n\nexport function values(legend: Legend, fieldDef: FieldDef<string>) {\n  const vals = legend.values;\n\n  if (vals) {\n    return valueArray(fieldDef, vals);\n  }\n  return undefined;\n}\n\nexport function type(t: Type, channel: Channel, scaleType: ScaleType): 'gradient' {\n  if (\n      isColorChannel(channel) && (\n        (t === 'quantitative' && !isBinScale(scaleType)) ||\n        (t === 'temporal' && contains<ScaleType>(['time', 'utc'], scaleType))\n      )\n    ) {\n    return 'gradient';\n  }\n  return undefined;\n}\n"]}