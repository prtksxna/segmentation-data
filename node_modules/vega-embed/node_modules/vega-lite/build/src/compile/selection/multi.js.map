{"version":3,"file":"multi.js","sourceRoot":"","sources":["../../../../src/compile/selection/multi.ts"],"names":[],"mappings":"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","sourcesContent":["import {stringValue} from 'vega-util';\n\nimport {accessPathWithDatum} from '../../util';\nimport {UnitModel} from '../unit';\nimport {SelectionCompiler, SelectionComponent, TUPLE, unitName} from './selection';\nimport nearest from './transforms/nearest';\n\nexport function signals(model: UnitModel, selCmpt: SelectionComponent) {\n  const proj = selCmpt.project;\n  const datum = nearest.has(selCmpt) ?\n    '(item().isVoronoi ? datum.datum : datum)' : 'datum';\n  const bins: string[] = [];\n  const encodings = proj.map((p) => stringValue(p.channel)).filter((e) => e).join(', ');\n  const fields = proj.map((p) => stringValue(p.field)).join(', ');\n  const values = proj.map((p) => {\n    const channel = p.channel;\n    const fieldDef = model.fieldDef(channel);\n    // Binned fields should capture extents, for a range test against the raw field.\n    return (fieldDef && fieldDef.bin) ? (bins.push(p.field),\n      `[${accessPathWithDatum(model.vgField(channel, {}), datum)}, ` +\n          `${accessPathWithDatum(model.vgField(channel, {binSuffix: 'end'}), datum)}]`) :\n      `${accessPathWithDatum(p.field, datum)}`;\n  }).join(', ');\n\n  // Only add a discrete selection to the store if a datum is present _and_\n  // the interaction isn't occurring on a group mark. This guards against\n  // polluting interactive state with invalid values in faceted displays\n  // as the group marks are also data-driven. We force the update to account\n  // for constant null states but varying toggles (e.g., shift-click in\n  // whitespace followed by a click in whitespace; the store should only\n  // be cleared on the second click).\n  return [{\n    name: selCmpt.name + TUPLE,\n    value: {},\n    on: [{\n      events: selCmpt.events,\n      update: `datum && item().mark.marktype !== 'group' ? ` +\n        `{unit: ${unitName(model)}, encodings: [${encodings}], ` +\n        `fields: [${fields}], values: [${values}]` +\n        (bins.length ? ', ' + bins.map((b) => `${stringValue('bin_' + b)}: 1`).join(', ') : '') +\n        '} : null',\n      force: true\n    }]\n  }];\n}\n\nconst multi:SelectionCompiler = {\n  predicate: 'vlMulti',\n  scaleDomain: 'vlMultiDomain',\n\n  signals: signals,\n\n  modifyExpr: function(model, selCmpt) {\n    const tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' +\n      (selCmpt.resolve === 'global' ? 'null' : `{unit: ${unitName(model)}}`);\n  }\n};\n\nexport default multi;\n"]}