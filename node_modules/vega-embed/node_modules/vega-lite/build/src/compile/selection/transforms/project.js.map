{"version":3,"file":"project.js","sourceRoot":"","sources":["../../../../../src/compile/selection/transforms/project.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,GAAG,MAAM,cAAc,CAAC;AAEpC,OAAO,EAAC,IAAI,EAAC,MAAM,eAAe,CAAC;AACnC,OAAO,EAAoB,YAAY,EAAC,MAAM,qBAAqB,CAAC;AAIpE,IAAM,OAAO,GAAsB;IACjC,GAAG,EAAE,UAAS,MAAyC;QACrD,IAAM,GAAG,GAAG,MAAsB,CAAC;QACnC,OAAO,GAAG,CAAC,MAAM,KAAK,SAAS,IAAI,GAAG,CAAC,SAAS,KAAK,SAAS,CAAC;IACjE,CAAC;IAED,KAAK,EAAE,UAAS,KAAK,EAAE,MAAM,EAAE,OAAO;QACpC,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAM,SAAS,GAAuC,EAAE,CAAC;QAEzD,0DAA0D;QAC1D,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAC,KAAK,IAAK,OAAA,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,EAAtB,CAAsB,CAAC,CAAC;QAEjE,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAC,OAAyB;YACzD,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACzC,IAAI,QAAQ,EAAE;gBACZ,IAAI,QAAQ,CAAC,QAAQ,EAAE;oBACrB,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBACvC,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;oBAE5B,6DAA6D;oBAC7D,2DAA2D;oBAC3D,6DAA6D;oBAC7D,iCAAiC;oBACjC,SAAS,CAAC,OAAO,CAAC,GAAG;wBACnB,EAAE,EAAE,OAAO;wBACX,KAAK,EAAE,QAAQ,CAAC,KAAK;wBACrB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;qBAC5B,CAAC;iBACH;qBAAM;oBACL,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;iBACpC;aACF;iBAAM;gBACL,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,kCAAkC,CAAC,OAAO,CAAC,CAAC,CAAC;aACnE;QACH,CAAC,CAAC,CAAC;QAEH,IAAM,UAAU,GAAG,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QAC7D,KAAK,IAAM,KAAK,IAAI,QAAQ,EAAE;YAC5B,IAAI,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBAClC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC;aAC3D;SACF;QAED,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;QACvD,UAAU,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,OAAO,EAAT,CAAS,CAAC,CAAC,OAAO,CAAC,UAAC,CAAC,IAAK,OAAA,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAA3B,CAA2B,CAAC,CAAC;QAEhF,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE;YAC1B,OAAO,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SACtD;IACH,CAAC;CACF,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["import {SingleDefChannel} from '../../../channel';\nimport * as log from '../../../log';\nimport {SelectionDef} from '../../../selection';\nimport {keys} from '../../../util';\nimport {TimeUnitComponent, TimeUnitNode} from '../../data/timeunit';\nimport {SelectionComponent} from '../selection';\nimport {TransformCompiler} from './transforms';\n\nconst project: TransformCompiler = {\n  has: function(selDef: SelectionComponent | SelectionDef) {\n    const def = selDef as SelectionDef;\n    return def.fields !== undefined || def.encodings !== undefined;\n  },\n\n  parse: function(model, selDef, selCmpt) {\n    const channels = {};\n    const timeUnits: {[key: string]: TimeUnitComponent} = {};\n\n    // TODO: find a possible channel mapping for these fields.\n    (selDef.fields || []).forEach((field) => channels[field] = null);\n\n    (selDef.encodings || []).forEach((channel: SingleDefChannel) => {\n      const fieldDef = model.fieldDef(channel);\n      if (fieldDef) {\n        if (fieldDef.timeUnit) {\n          const tuField = model.vgField(channel);\n          channels[tuField] = channel;\n\n          // Construct TimeUnitComponents which will be combined into a\n          // TimeUnitNode. This node may need to be inserted into the\n          // dataflow if the selection is used across views that do not\n          // have these time units defined.\n          timeUnits[tuField] = {\n            as: tuField,\n            field: fieldDef.field,\n            timeUnit: fieldDef.timeUnit\n          };\n        } else {\n          channels[fieldDef.field] = channel;\n        }\n      } else {\n        log.warn(log.message.cannotProjectOnChannelWithoutField(channel));\n      }\n    });\n\n    const projection = selCmpt.project || (selCmpt.project = []);\n    for (const field in channels) {\n      if (channels.hasOwnProperty(field)) {\n        projection.push({field: field, channel: channels[field]});\n      }\n    }\n\n    const fields = selCmpt.fields || (selCmpt.fields = {});\n    projection.filter((p) => p.channel).forEach((p) => fields[p.channel] = p.field);\n\n    if (keys(timeUnits).length) {\n      selCmpt.timeUnit = new TimeUnitNode(null, timeUnits);\n    }\n  }\n};\n\nexport default project;\n"]}