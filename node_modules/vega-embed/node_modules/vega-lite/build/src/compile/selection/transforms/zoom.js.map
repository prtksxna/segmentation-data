{"version":3,"file":"zoom.js","sourceRoot":"","sources":["../../../../../src/compile/selection/transforms/zoom.ts"],"names":[],"mappings":"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","sourcesContent":["import {selector as parseSelector} from 'vega-event-selector';\nimport {stringValue} from 'vega-util';\nimport {ScaleChannel, X, Y} from '../../../channel';\nimport {VgSignal} from '../../../vega.schema';\nimport {BRUSH as INTERVAL_BRUSH} from '../interval';\nimport {channelSignalName, positionalProjections, SelectionComponent} from '../selection';\nimport {UnitModel} from './../../unit';\nimport {default as scalesCompiler, domain} from './scales';\nimport {TransformCompiler} from './transforms';\n\n\nconst ANCHOR = '_zoom_anchor';\nconst DELTA = '_zoom_delta';\n\nconst zoom:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type === 'interval' && selCmpt.zoom;\n  },\n\n  signals: function(model, selCmpt, signals) {\n    const name = selCmpt.name;\n    const hasScales = scalesCompiler.has(selCmpt);\n    const delta = name + DELTA;\n    const {x, y} = positionalProjections(selCmpt);\n    const sx = stringValue(model.scaleName(X));\n    const sy = stringValue(model.scaleName(Y));\n    let events = parseSelector(selCmpt.zoom, 'scope');\n\n    if (!hasScales) {\n      events = events.map((e) => (e.markname = name + INTERVAL_BRUSH, e));\n    }\n\n    signals.push({\n      name: name + ANCHOR,\n      on: [{\n        events: events,\n        update: !hasScales ? `{x: x(unit), y: y(unit)}` :\n          '{' + [\n            (sx ? `x: invert(${sx}, x(unit))` : ''),\n            (sy ? `y: invert(${sy}, y(unit))` : '')\n          ].filter((expr) => !!expr).join(', ') + '}'\n      }]\n    }, {\n      name: delta,\n      on: [{\n        events: events,\n        force: true,\n        update: 'pow(1.001, event.deltaY * pow(16, event.deltaMode))'\n      }]\n    });\n\n    if (x !== null) {\n      onDelta(model, selCmpt, 'x', 'width', signals);\n    }\n\n    if (y !== null) {\n      onDelta(model, selCmpt, 'y', 'height', signals);\n    }\n\n    return signals;\n  }\n};\n\nexport default zoom;\n\nfunction onDelta(model: UnitModel, selCmpt: SelectionComponent, channel: ScaleChannel, size: 'width' | 'height', signals: VgSignal[]) {\n  const name = selCmpt.name;\n  const hasScales = scalesCompiler.has(selCmpt);\n  const signal = signals.filter(s => {\n    return s.name === channelSignalName(selCmpt, channel, hasScales ? 'data' : 'visual');\n  })[0];\n  const sizeSg = model.getSizeSignalRef(size).signal;\n  const scaleCmpt = model.getScaleComponent(channel);\n  const scaleType = scaleCmpt.get('type');\n  const base = hasScales ? domain(model, channel) : signal.name;\n  const delta = name + DELTA;\n  const anchor = `${name}${ANCHOR}.${channel}`;\n  const zoomFn = !hasScales ? 'zoomLinear' :\n    scaleType === 'log' ? 'zoomLog' :\n    scaleType === 'pow' ? 'zoomPow' : 'zoomLinear';\n  const update = `${zoomFn}(${base}, ${anchor}, ${delta}` +\n    (hasScales && scaleType === 'pow' ? `, ${scaleCmpt.get('exponent') || 1}` : '') + ')';\n\n  signal.on.push({\n    events: {signal: delta},\n    update: hasScales ? update : `clampRange(${update}, 0, ${sizeSg})`\n  });\n}\n"]}