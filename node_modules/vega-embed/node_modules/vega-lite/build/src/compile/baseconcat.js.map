{"version":3,"file":"baseconcat.js","sourceRoot":"","sources":["../../../src/compile/baseconcat.ts"],"names":[],"mappings":"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","sourcesContent":["import {Config} from '../config';\nimport {Resolve} from '../resolve';\nimport {BaseSpec} from '../spec';\nimport {keys} from '../util';\nimport {VgData, VgSignal} from '../vega.schema';\nimport {parseData} from './data/parse';\nimport {assembleLayoutSignals} from './layoutsize/assemble';\nimport {Model} from './model';\nimport {RepeaterValue} from './repeater';\n\nexport abstract class BaseConcatModel extends Model {\n  constructor(spec: BaseSpec, parent: Model, parentGivenName: string, config: Config, repeater: RepeaterValue, resolve: Resolve) {\n    super(spec, parent, parentGivenName, config, repeater, resolve);\n  }\n\n  public parseData() {\n    this.component.data = parseData(this);\n    this.children.forEach((child) => {\n      child.parseData();\n    });\n  }\n  public parseSelection() {\n    // Merge selections up the hierarchy so that they may be referenced\n    // across unit specs. Persist their definitions within each child\n    // to assemble signals which remain within output Vega unit groups.\n    this.component.selection = {};\n    for (const child of this.children) {\n      child.parseSelection();\n      keys(child.component.selection).forEach((key) => {\n        this.component.selection[key] = child.component.selection[key];\n      });\n    }\n  }\n\n  public parseMarkGroup() {\n    for (const child of this.children) {\n      child.parseMarkGroup();\n    }\n  }\n\n  public parseAxisAndHeader() {\n    for (const child of this.children) {\n      child.parseAxisAndHeader();\n    }\n\n    // TODO(#2415): support shared axes\n  }\n\n  public assembleSelectionTopLevelSignals(signals: any[]): VgSignal[] {\n    return this.children.reduce((sg, child) => child.assembleSelectionTopLevelSignals(sg), signals);\n  }\n\n  public assembleSelectionSignals(): VgSignal[] {\n    this.children.forEach((child) => child.assembleSelectionSignals());\n    return [];\n  }\n\n  public assembleLayoutSignals(): VgSignal[] {\n    return this.children.reduce((signals, child) => {\n      return signals.concat(child.assembleLayoutSignals());\n    }, assembleLayoutSignals(this));\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return this.children.reduce((db, child) => child.assembleSelectionData(db), data);\n  }\n\n  public assembleMarks(): any[] {\n    // only children have marks\n    return this.children.map(child => {\n      const title = child.assembleTitle();\n      const style = child.assembleGroupStyle();\n      const layoutSizeEncodeEntry = child.assembleLayoutSize();\n      return {\n        type: 'group',\n        name: child.getName('group'),\n        ...(title ? {title} : {}),\n        ...(style ? {style} : {}),\n        ...(layoutSizeEncodeEntry ? {\n          encode: {\n            update: layoutSizeEncodeEntry\n          }\n        } : {}),\n        ...child.assembleGroup()\n      };\n    });\n  }\n}\n"]}