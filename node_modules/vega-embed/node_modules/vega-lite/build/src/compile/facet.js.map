{"version":3,"file":"facet.js","sourceRoot":"","sources":["../../../src/compile/facet.ts"],"names":[],"mappings":";AACA,OAAO,EAAC,OAAO,EAAC,MAAM,WAAW,CAAC;AAClC,OAAO,EAAU,MAAM,EAAE,GAAG,EAAe,MAAM,YAAY,CAAC;AAE9D,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AAEnC,OAAO,EAAW,SAAS,EAAE,KAAK,IAAI,aAAa,EAAE,OAAO,EAAC,MAAM,aAAa,CAAC;AACjF,OAAO,KAAK,GAAG,MAAM,QAAQ,CAAC;AAC9B,OAAO,EAAC,iBAAiB,EAAC,MAAM,UAAU,CAAC;AAC3C,OAAO,EAAoB,WAAW,EAAY,MAAM,SAAS,CAAC;AAElE,OAAO,EAAC,QAAQ,EAAC,MAAM,SAAS,CAAC;AACjC,OAAO,EAAC,aAAa,EAA0C,MAAM,gBAAgB,CAAC;AACtF,OAAO,EAAC,YAAY,EAAC,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAC,UAAU,EAAC,MAAM,cAAc,CAAC;AACxC,OAAO,EAAC,iBAAiB,EAAC,MAAM,iBAAiB,CAAC;AAClD,OAAO,EAAC,mBAAmB,EAAC,MAAM,kBAAkB,CAAC;AACrD,OAAO,EAAC,SAAS,EAAC,MAAM,cAAc,CAAC;AACvC,OAAO,EAAC,aAAa,EAAiC,MAAM,gBAAgB,CAAC;AAC7E,OAAO,EAAC,uBAAuB,EAAC,MAAM,oBAAoB,CAAC;AAC3D,OAAO,EAAQ,cAAc,EAAC,MAAM,SAAS,CAAC;AAC9C,OAAO,EAAgB,sBAAsB,EAAC,MAAM,YAAY,CAAC;AACjE,OAAO,EAAC,iBAAiB,EAAC,MAAM,WAAW,CAAC;AAC5C,OAAO,EAAC,cAAc,EAAE,kBAAkB,EAAC,MAAM,gBAAgB,CAAC;AAElE,MAAM,6BAA6B,QAA+B,EAAE,IAA+B,EAAE,IAAc;IACjH,OAAO,OAAO,CAAC,IAAI,EAAE,EAAC,IAAI,MAAA,EAAE,MAAM,EAAE,QAAM,OAAO,CAAC,QAAQ,CAAG,EAAC,CAAC,CAAC;AAClE,CAAC;AAED;IAAgC,sCAAc;IAQ5C,oBAAY,IAAyB,EAAE,MAAa,EAAE,eAAuB,EAAE,QAAuB,EAAE,MAAc;QAAtH,YACE,kBAAM,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,SASrE;QAjBe,UAAI,GAAY,OAAO,CAAC;QAWtC,KAAI,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAI,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACpG,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAM,KAAK,GAAyB,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAEjF,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;IACrC,CAAC;IAEO,8BAAS,GAAjB,UAAkB,KAA2B;QAC3C,oDAAoD;QACpD,OAAO,MAAM,CAAC,KAAK,EAAE,UAAS,eAAe,EAAE,QAA0B,EAAE,OAAgB;YACzF,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE;gBACrC,2BAA2B;gBAC3B,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;gBAC5D,OAAO,eAAe,CAAC;aACxB;YAED,IAAI,QAAQ,CAAC,KAAK,KAAK,SAAS,EAAE;gBAChC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;gBACvD,OAAO,eAAe,CAAC;aACxB;YAED,gGAAgG;YAChG,eAAe,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACxD,OAAO,eAAe,CAAC;QACzB,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAEM,oCAAe,GAAtB,UAAuB,OAAgB;QACrC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAEM,6BAAQ,GAAf,UAAgB,OAAgB;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAEM,8BAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAEM,oCAAe,GAAtB;QACE,uBAAuB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEM,mCAAc,GAArB;QACE,wEAAwE;QACxE,uEAAuE;QACvE,mBAAmB;QACnB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;IAC5D,CAAC;IAEM,mCAAc,GAArB;QACE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;IAC9B,CAAC;IAEM,uCAAkB,GAAzB;QACE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAEhC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAExB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEO,gCAAW,GAAnB,UAAoB,OAAsB;QAExC,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;YACjC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACrC,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC;YACrC,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACzD,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAEnF,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE;gBACrD,sEAAsE;gBACtE,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;gBACnE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;aAC1D;YAED,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG;gBACtC,KAAK,OAAA;gBACL,aAAa,EAAE,QAAQ;gBACvB,+CAA+C;gBAC/C,MAAM,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aAClD,CAAC;SACH;IACH,CAAC;IAEO,wCAAmB,GAA3B,UAA4B,OAAsB,EAAE,MAAe;QACjE,IAAM,QAAQ,GAAG,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;QAExD,OAAO;YACL,MAAM,QAAA;YACN,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7G,IAAI,EAAE,EAAE;SACT,CAAC;IACJ,CAAC;IAEO,mCAAc,GAAtB,UAAuB,OAAkB;QAChC,IAAA,kBAAK,CAAS;QACrB,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAA,mBAAyC,EAAxC,gCAAa,EAAE,oBAAO,CAAmB;YAChD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAE5D,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACtC,6DAA6D;gBAC7D,IAAM,aAAa,GAAG,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;gBAEzD,IAAM,YAAY,GAAG,aAAa,CAAC,aAAa,CAAC,CAAC;gBAClD,KAA4B,UAA6B,EAA7B,KAAA,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAA7B,cAA6B,EAA7B,IAA6B,EAAE;oBAAtD,IAAM,aAAa,SAAA;oBACtB,IAAM,UAAU,GAAG,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC9D,YAAY,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC,UAAU,CAAC;wBACnD,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;oBAEjD,IAAM,QAAQ,GAAG,YAAY,CAAC,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;oBAClF,gFAAgF;oBAChF,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAChD,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;iBACpC;aACF;iBAAM;gBACL,4CAA4C;aAC7C;SACF;IACH,CAAC;IAEM,qDAAgC,GAAvC,UAAwC,OAAc;QACpD,OAAO,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,OAAO,CAAC,CAAC;IAC9D,CAAC;IAEM,6CAAwB,GAA/B;QACE,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACtC,OAAO,EAAE,CAAC;IACZ,CAAC;IAEM,0CAAqB,GAA5B,UAA6B,IAAc;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAEO,0CAAqB,GAA7B;QAAA,iBAyBC;QAxBC,IAAM,YAAY,GAAa,EAAE,CAAC;QAElC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,OAAyB;YAClD,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,UAA+B;gBAC3D,IAAM,qBAAqB,GAAG,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACpE,IAAM,eAAe,GAAG,qBAAqB,CAAC,UAAU,CAAC,CAAC;gBAC1D,IAAI,eAAe,IAAI,eAAe,CAAC,CAAC,CAAC,EAAE;oBACzC,wBAAwB;oBACxB,IAAM,QAAQ,GAAG,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;oBACxD,IAAM,QAAQ,GAAG,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC;oBACvE,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;wBAClD,kEAAkE;wBAClE,YAAY,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;wBACtD,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;qBACvC;oBAED,IAAI,qBAAqB,CAAC,KAAK,EAAE;wBAC/B,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,IAAI,EAAE,CAAC;wBAChD,YAAY,CAAC,MAAM,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;qBAC1E;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,YAAY,CAAC;IACtB,CAAC;IAES,0CAAqB,GAA/B;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjF,qEAAqE;QAErE,4BACK,IAAI,CAAC,qBAAqB,EAAE,IAE/B,OAAO,SAAA,EACP,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,KAAK,IACZ;IACJ,CAAC;IAEM,0CAAqB,GAA5B;QACE,6GAA6G;QAC7G,OAAO,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,CAAC;IAC5C,CAAC;IAEO,yCAAoB,GAA5B;QACE,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,YAAY,UAAU,CAAC,EAAE;YACtD,8DAA8D;YAC9D,4DAA4D;YAC5D,4DAA4D;YAC5D,OAAO,SAAS,CAAC;SAClB;aAAM;YACL,kFAAkF;YAClF,IAAM,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAC1D,OAAO,EAAC,MAAM,EAAE,kBAAgB,mBAAmB,QAAK,EAAC,CAAC;SAC3D;IACH,CAAC;IAEM,kCAAa,GAApB,UAAqB,OAAmB;QACtC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,YAAY,UAAU,CAAC,EAAE;YACtD,wCAAwC;YACxC,4DAA4D;YAC5D,4DAA4D;YAC5D,4BACK,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,MAAM,EAAE;oBACN,MAAM,EAAE;wBACN,uDAAuD;wBACvD,yDAAyD;wBACzD,OAAO,EAAE,EAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAC,MAAM,EAAE,UAAU,EAAC,CAAC,EAAC;qBACnE;iBACF;aACF,CAAC,CAAC,CAAC,EAAE,CAAC,EACJ,iBAAM,aAAa,YAAC,OAAO,CAAC,EAC/B;SACH;QACD,OAAO,iBAAM,aAAa,YAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACK,oDAA+B,GAAvC;QACE,IAAM,MAAM,GAAa,EAAE,CAAC;QAC5B,IAAM,GAAG,GAAkB,EAAE,CAAC;QAC9B,IAAM,EAAE,GAAa,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,KAAK,YAAY,UAAU,EAAE;YACpC,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;gBACxC,IAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC/C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACrB,EAAE,CAAC,IAAI,CAAC,cAAY,KAAO,CAAC,CAAC;aAC9B;SACF;aAAM;YACL,KAAsB,UAA4B,EAA5B,KAAA,CAAC,GAAG,EAAE,GAAG,CAAmB,EAA5B,cAA4B,EAA5B,IAA4B,EAAE;gBAA/C,IAAM,OAAO,SAAA;gBAChB,IAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACjE,IAAI,mBAAmB,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE;oBACtD,IAAM,IAAI,GAAG,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBAC7C,IAAM,KAAK,GAAG,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAE/C,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;wBACnD,IAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;wBACnD,IAAM,KAAK,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;wBACzC,IAAI,KAAK,EAAE;4BACT,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BACnB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;4BACrB,EAAE,CAAC,IAAI,CAAC,cAAY,KAAO,CAAC,CAAC;yBAC9B;6BAAM;4BACL,GAAG,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;yBACxE;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAC,MAAM,QAAA,EAAE,GAAG,KAAA,EAAE,EAAE,IAAA,EAAC,CAAC;IAC3B,CAAC;IAGO,kCAAa,GAArB;QAAA,iBAgDC;QA/CO,IAAA,kCAA4C,EAA3C,cAAI,EAAE,cAAI,CAAkC;QAC7C,IAAA,eAA0B,EAAzB,YAAG,EAAE,kBAAM,CAAe;QAC3B,IAAA,2CAA0D,EAAzD,kBAAM,EAAE,YAAG,EAAE,UAAE,CAA2C;QACjE,IAAM,OAAO,GAAa,EAAE,CAAC;QAE7B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,OAAyB;YAClD,IAAM,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACrC,IAAI,QAAQ,EAAE;gBACZ,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzB,IAAA,oBAAI,CAAa;gBACxB,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;oBACd,IAAA,kBAAK,EAAE,YAAE,CAAS;oBACzB,IAAM,UAAU,GAAG,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;oBACtD,IAAI,GAAG,IAAI,MAAM,EAAE;wBACjB,gFAAgF;wBAChF,2EAA2E;wBAC3E,0DAA0D;wBAC1D,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACxB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAChB,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBACrB;yBAAM;wBACL,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACnB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACb,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBACrB;iBACF;qBAAM,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;oBACxB,IAAM,UAAU,GAAG,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;oBAC1D,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACxB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAChB,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACrB;aACF;QACH,CAAC,CAAC,CAAC;QAEH,IAAM,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC;QAEhC,0BACE,IAAI,MAAA;YACJ,IAAI,MAAA;YACJ,OAAO,SAAA,IACJ,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,SAAS,uBACJ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,OAAA,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EACtB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,MAAM,QAAA,EAAE,GAAG,KAAA,EAAE,EAAE,IAAA,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAC5C;SACF,CAAC,CAAC,CAAC,EAAE,CAAC,EACP;IACJ,CAAC;IAGO,qCAAgB,GAAxB,UAAyB,OAAyB;QACzC,IAAA,kBAAK,CAAS;QACrB,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;QAEhC,IAAI,QAAQ,EAAE;YACZ,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC9B,OAAO,CAAC,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;aAC/D;iBAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACjC,OAAO,CAAC,mBAAmB,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;aAC1D;YACD,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC,CAAC;SAC7C;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAEO,oCAAe,GAAvB,UAAwB,OAAyB;QACxC,IAAA,kBAAK,CAAS;QACrB,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,QAAQ,EAAE;YACL,IAAA,oBAAI,CAAa;YACxB,IAAM,KAAK,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,WAAW,CAAC;YACvF,OAAO,CAAC,KAAK,CAAC,CAAC;SAChB;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAEM,kCAAa,GAApB;QACS,IAAA,kBAAK,CAAS;QACrB,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;QAChD,IAAM,IAAI,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAE1C,oFAAoF;QACpF,+BAA+B;QAC/B,IAAM,qBAAqB,GAAG,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAEzD,IAAM,KAAK,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC;QACpC,IAAM,KAAK,GAAG,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAEzC,IAAM,SAAS,sBACb,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAC1B,IAAI,EAAE,OAAO,IACV,CAAC,KAAK,CAAA,CAAC,CAAC,EAAC,KAAK,OAAA,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EACrB,CAAC,KAAK,CAAA,CAAC,CAAC,EAAC,KAAK,OAAA,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IACxB,IAAI,EAAE;gBACJ,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE;aAC5B;YACD,gCAAgC;YAChC,IAAI,EAAE;gBACJ,KAAK,EACA,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAC5B,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CACnC;gBACD,KAAK,EACA,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAC3B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAClC;aACF,IACE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EACrC,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAC,MAAM,EAAE,EAAC,MAAM,EAAE,qBAAqB,EAAC,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EACxE,KAAK,CAAC,aAAa,EAAE,CACzB,CAAC;QAEF,OAAO,CAAC,SAAS,CAAC,CAAC;IACrB,CAAC;IAGS,+BAAU,GAApB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACH,iBAAC;AAAD,CAAC,AAxYD,CAAgC,cAAc,GAwY7C","sourcesContent":["import {AggregateOp} from 'vega';\nimport {isArray} from 'vega-util';\nimport {Channel, COLUMN, ROW, ScaleChannel} from '../channel';\nimport {Config} from '../config';\nimport {reduce} from '../encoding';\nimport {FacetFieldDef, FacetMapping} from '../facet';\nimport {FieldDef, normalize, title as fieldDefTitle, vgField} from '../fielddef';\nimport * as log from '../log';\nimport {hasDiscreteDomain} from '../scale';\nimport {EncodingSortField, isSortField, SortOrder} from '../sort';\nimport {NormalizedFacetSpec} from '../spec';\nimport {contains} from '../util';\nimport {isVgRangeStep, VgData, VgLayout, VgMarkGroup, VgSignal} from '../vega.schema';\nimport {assembleAxis} from './axis/assemble';\nimport {buildModel} from './buildmodel';\nimport {assembleFacetData} from './data/assemble';\nimport {sortArrayIndexField} from './data/calculate';\nimport {parseData} from './data/parse';\nimport {getHeaderType, HeaderChannel, HeaderComponent} from './header/index';\nimport {parseChildrenLayoutSize} from './layoutsize/parse';\nimport {Model, ModelWithField} from './model';\nimport {RepeaterValue, replaceRepeaterInFacet} from './repeater';\nimport {parseGuideResolve} from './resolve';\nimport {assembleDomain, getFieldFromDomain} from './scale/domain';\n\nexport function facetSortFieldName(fieldDef: FacetFieldDef<string>, sort: EncodingSortField<string>, expr?: 'datum') {\n  return vgField(sort, {expr, suffix: `by_${vgField(fieldDef)}`});\n}\n\nexport class FacetModel extends ModelWithField {\n  public readonly type: 'facet' = 'facet';\n  public readonly facet: FacetMapping<string>;\n\n  public readonly child: Model;\n\n  public readonly children: Model[];\n\n  constructor(spec: NormalizedFacetSpec, parent: Model, parentGivenName: string, repeater: RepeaterValue, config: Config) {\n    super(spec, parent, parentGivenName, config, repeater, spec.resolve);\n\n\n    this.child = buildModel(spec.spec, this, this.getName('child'), undefined, repeater, config, false);\n    this.children = [this.child];\n\n    const facet: FacetMapping<string> = replaceRepeaterInFacet(spec.facet, repeater);\n\n    this.facet = this.initFacet(facet);\n  }\n\n  private initFacet(facet: FacetMapping<string>): FacetMapping<string> {\n    // clone to prevent side effect to the original spec\n    return reduce(facet, function(normalizedFacet, fieldDef: FieldDef<string>, channel: Channel) {\n      if (!contains([ROW, COLUMN], channel)) {\n        // Drop unsupported channel\n        log.warn(log.message.incompatibleChannel(channel, 'facet'));\n        return normalizedFacet;\n      }\n\n      if (fieldDef.field === undefined) {\n        log.warn(log.message.emptyFieldDef(fieldDef, channel));\n        return normalizedFacet;\n      }\n\n      // Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.\n      normalizedFacet[channel] = normalize(fieldDef, channel);\n      return normalizedFacet;\n    }, {});\n  }\n\n  public channelHasField(channel: Channel): boolean {\n    return !!this.facet[channel];\n  }\n\n  public fieldDef(channel: Channel): FieldDef<string> {\n    return this.facet[channel];\n  }\n\n  public parseData() {\n    this.component.data = parseData(this);\n    this.child.parseData();\n  }\n\n  public parseLayoutSize() {\n    parseChildrenLayoutSize(this);\n  }\n\n  public parseSelection() {\n    // As a facet has a single child, the selection components are the same.\n    // The child maintains its selections to assemble signals, which remain\n    // within its unit.\n    this.child.parseSelection();\n    this.component.selection = this.child.component.selection;\n  }\n\n  public parseMarkGroup() {\n    this.child.parseMarkGroup();\n  }\n\n  public parseAxisAndHeader() {\n    this.child.parseAxisAndHeader();\n\n    this.parseHeader('column');\n    this.parseHeader('row');\n\n    this.mergeChildAxis('x');\n    this.mergeChildAxis('y');\n  }\n\n  private parseHeader(channel: HeaderChannel) {\n\n    if (this.channelHasField(channel)) {\n      const fieldDef = this.facet[channel];\n      const header = fieldDef.header || {};\n      let title = fieldDef.title !== undefined ? fieldDef.title :\n        header.title !== undefined ? header.title : fieldDefTitle(fieldDef, this.config);\n\n      if (this.child.component.layoutHeaders[channel].title) {\n        // merge title with child to produce \"Title / Subtitle / Sub-subtitle\"\n        title += ' / ' + this.child.component.layoutHeaders[channel].title;\n        this.child.component.layoutHeaders[channel].title = null;\n      }\n\n      this.component.layoutHeaders[channel] = {\n        title,\n        facetFieldDef: fieldDef,\n        // TODO: support adding label to footer as well\n        header: [this.makeHeaderComponent(channel, true)]\n      };\n    }\n  }\n\n  private makeHeaderComponent(channel: HeaderChannel, labels: boolean): HeaderComponent {\n    const sizeType = channel === 'row' ? 'height' : 'width';\n\n    return {\n      labels,\n      sizeSignal: this.child.component.layoutSize.get(sizeType) ? this.child.getSizeSignalRef(sizeType) : undefined,\n      axes: []\n    };\n  }\n\n  private mergeChildAxis(channel: 'x' | 'y') {\n    const {child} = this;\n    if (child.component.axes[channel]) {\n      const {layoutHeaders, resolve} = this.component;\n      resolve.axis[channel] = parseGuideResolve(resolve, channel);\n\n      if (resolve.axis[channel] === 'shared') {\n        // For shared axis, move the axes to facet's header or footer\n        const headerChannel = channel === 'x' ? 'column' : 'row';\n\n        const layoutHeader = layoutHeaders[headerChannel];\n        for (const axisComponent of child.component.axes[channel]) {\n          const headerType = getHeaderType(axisComponent.get('orient'));\n          layoutHeader[headerType] = layoutHeader[headerType] ||\n          [this.makeHeaderComponent(headerChannel, false)];\n\n          const mainAxis = assembleAxis(axisComponent, 'main', this.config, {header: true});\n          // LayoutHeader no longer keep track of property precedence, thus let's combine.\n          layoutHeader[headerType][0].axes.push(mainAxis);\n          axisComponent.mainExtracted = true;\n        }\n      } else {\n        // Otherwise do nothing for independent axes\n      }\n    }\n  }\n\n  public assembleSelectionTopLevelSignals(signals: any[]): VgSignal[] {\n    return this.child.assembleSelectionTopLevelSignals(signals);\n  }\n\n  public assembleSelectionSignals(): VgSignal[] {\n    this.child.assembleSelectionSignals();\n    return [];\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return this.child.assembleSelectionData(data);\n  }\n\n  private getHeaderLayoutMixins(): VgLayout {\n    const layoutMixins: VgLayout = {};\n\n    ['row', 'column'].forEach((channel: 'row' | 'column') => {\n      ['header', 'footer'].forEach((headerType: 'header' | 'footer') => {\n        const layoutHeaderComponent = this.component.layoutHeaders[channel];\n        const headerComponent = layoutHeaderComponent[headerType];\n        if (headerComponent && headerComponent[0]) {\n          // set header/footerBand\n          const sizeType = channel === 'row' ? 'height' : 'width';\n          const bandType = headerType === 'header' ? 'headerBand' : 'footerBand';\n          if (!this.child.component.layoutSize.get(sizeType)) {\n            // If facet child does not have size signal, then apply headerBand\n            layoutMixins[bandType] = layoutMixins[bandType] || {};\n            layoutMixins[bandType][channel] = 0.5;\n          }\n\n          if (layoutHeaderComponent.title) {\n            layoutMixins.offset = layoutMixins.offset || {};\n            layoutMixins.offset[channel === 'row' ? 'rowTitle' : 'columnTitle'] = 10;\n          }\n        }\n      });\n    });\n    return layoutMixins;\n  }\n\n  protected assembleDefaultLayout(): VgLayout {\n    const columns = this.channelHasField('column') ? this.columnDistinctSignal() : 1;\n\n    // TODO: determine default align based on shared / independent scales\n\n    return {\n      ...this.getHeaderLayoutMixins(),\n\n      columns,\n      bounds: 'full',\n      align: 'all'\n    };\n  }\n\n  public assembleLayoutSignals(): VgSignal[] {\n    // FIXME(https://github.com/vega/vega-lite/issues/1193): this can be incorrect if we have independent scales.\n    return this.child.assembleLayoutSignals();\n  }\n\n  private columnDistinctSignal() {\n    if (this.parent && (this.parent instanceof FacetModel)) {\n      // For nested facet, we will add columns to group mark instead\n      // See discussion in https://github.com/vega/vega/issues/952\n      // and https://github.com/vega/vega-view/releases/tag/v1.2.6\n      return undefined;\n    } else {\n      // In facetNode.assemble(), the name is always this.getName('column') + '_layout'.\n      const facetLayoutDataName = this.getName('column_domain');\n      return {signal: `length(data('${facetLayoutDataName}'))`};\n    }\n  }\n\n  public assembleGroup(signals: VgSignal[]) {\n    if (this.parent && (this.parent instanceof FacetModel)) {\n      // Provide number of columns for layout.\n      // See discussion in https://github.com/vega/vega/issues/952\n      // and https://github.com/vega/vega-view/releases/tag/v1.2.6\n      return {\n        ...(this.channelHasField('column') ? {\n          encode: {\n            update: {\n              // TODO(https://github.com/vega/vega-lite/issues/2759):\n              // Correct the signal for facet of concat of facet_column\n              columns: {field: vgField(this.facet.column, {prefix: 'distinct'})}\n            }\n          }\n        } : {}),\n        ...super.assembleGroup(signals)\n      };\n    }\n    return super.assembleGroup(signals);\n  }\n\n  /**\n   * Aggregate cardinality for calculating size\n   */\n  private getCardinalityAggregateForChild() {\n    const fields: string[] = [];\n    const ops: AggregateOp[] = [];\n    const as: string[] = [];\n\n    if (this.child instanceof FacetModel) {\n      if (this.child.channelHasField('column')) {\n        const field = vgField(this.child.facet.column);\n        fields.push(field);\n        ops.push('distinct');\n        as.push(`distinct_${field}`);\n      }\n    } else {\n      for (const channel of ['x', 'y'] as ScaleChannel[]) {\n        const childScaleComponent = this.child.component.scales[channel];\n        if (childScaleComponent && !childScaleComponent.merged) {\n          const type = childScaleComponent.get('type');\n          const range = childScaleComponent.get('range');\n\n          if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n            const domain = assembleDomain(this.child, channel);\n            const field = getFieldFromDomain(domain);\n            if (field) {\n              fields.push(field);\n              ops.push('distinct');\n              as.push(`distinct_${field}`);\n            } else {\n              log.warn('Unknown field for ${channel}.  Cannot calculate view size.');\n            }\n          }\n        }\n      }\n    }\n    return {fields, ops, as};\n  }\n\n\n  private assembleFacet() {\n    const {name, data} = this.component.data.facetRoot;\n    const {row, column} = this.facet;\n    const {fields, ops, as} = this.getCardinalityAggregateForChild();\n    const groupby: string[] = [];\n\n    ['row', 'column'].forEach((channel: 'row' | 'column') => {\n      const fieldDef = this.facet[channel];\n      if (fieldDef) {\n        groupby.push(vgField(fieldDef));\n        const {sort} = fieldDef;\n        if (isSortField(sort)) {\n          const {field, op} = sort;\n          const outputName = facetSortFieldName(fieldDef, sort);\n          if (row && column) {\n            // For crossed facet, use pre-calculate field as it requires a different groupby\n            // For each calculated field, apply max and assign them to the same name as\n            // all values of the same group should be the same anyway.\n            fields.push(outputName);\n            ops.push('max');\n            as.push(outputName);\n          } else {\n            fields.push(field);\n            ops.push(op);\n            as.push(outputName);\n          }\n        } else if (isArray(sort)) {\n          const outputName = sortArrayIndexField(fieldDef, channel);\n          fields.push(outputName);\n          ops.push('max');\n          as.push(outputName);\n        }\n      }\n    });\n\n    const cross = !!row && !!column;\n\n    return {\n      name,\n      data,\n      groupby,\n      ...(cross || fields.length ? {\n        aggregate: {\n          ...(cross ? {cross} : {}),\n          ...(fields.length ? {fields, ops, as} : {})\n        }\n      } : {})\n    };\n  }\n\n\n  private headerSortFields(channel: 'row' | 'column'): string[] {\n    const {facet} = this;\n    const fieldDef = facet[channel];\n\n    if (fieldDef) {\n      if (isSortField(fieldDef.sort)) {\n        return [facetSortFieldName(fieldDef, fieldDef.sort, 'datum')];\n      } else if (isArray(fieldDef.sort)) {\n        return [sortArrayIndexField(fieldDef, channel, 'datum')];\n      }\n      return [vgField(fieldDef, {expr: 'datum'})];\n    }\n    return [];\n  }\n\n  private headerSortOrder(channel: 'row' | 'column'): SortOrder[] {\n    const {facet} = this;\n    const fieldDef = facet[channel];\n    if (fieldDef) {\n      const {sort} = fieldDef;\n      const order = (isSortField(sort) ? sort.order : !isArray(sort) && sort) || 'ascending';\n      return [order];\n    }\n    return [];\n  }\n\n  public assembleMarks(): VgMarkGroup[] {\n    const {child} = this;\n    const facetRoot = this.component.data.facetRoot;\n    const data = assembleFacetData(facetRoot);\n\n    // If we facet by two dimensions, we need to add a cross operator to the aggregation\n    // so that we create all groups\n    const layoutSizeEncodeEntry = child.assembleLayoutSize();\n\n    const title = child.assembleTitle();\n    const style = child.assembleGroupStyle();\n\n    const markGroup = {\n      name: this.getName('cell'),\n      type: 'group',\n      ...(title? {title} : {}),\n      ...(style? {style} : {}),\n      from: {\n        facet: this.assembleFacet()\n      },\n      // TODO: move this to after data\n      sort: {\n        field: [\n          ...this.headerSortFields('row'),\n          ...this.headerSortFields('column')\n        ],\n        order: [\n          ...this.headerSortOrder('row'),\n          ...this.headerSortOrder('column')\n        ]\n      },\n      ...(data.length > 0 ? {data: data} : {}),\n      ...(layoutSizeEncodeEntry ? {encode: {update: layoutSizeEncodeEntry}} : {}),\n      ...child.assembleGroup()\n    };\n\n    return [markGroup];\n  }\n\n\n  protected getMapping() {\n    return this.facet;\n  }\n}\n\n"]}