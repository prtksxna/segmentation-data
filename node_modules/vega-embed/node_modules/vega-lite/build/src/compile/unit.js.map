{"version":3,"file":"unit.js","sourceRoot":"","sources":["../../../src/compile/unit.ts"],"names":[],"mappings":"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","sourcesContent":["import {Axis} from '../axis';\nimport {Channel, GEOPOSITION_CHANNELS, NONPOSITION_SCALE_CHANNELS, SCALE_CHANNELS, ScaleChannel, SingleDefChannel, X, Y} from '../channel';\nimport {Config} from '../config';\nimport * as vlEncoding from '../encoding';\nimport {Encoding, normalizeEncoding} from '../encoding';\nimport {ChannelDef, FieldDef, getFieldDef, hasConditionalFieldDef, isFieldDef} from '../fielddef';\nimport {Legend} from '../legend';\nimport {GEOSHAPE, isMarkDef, Mark, MarkDef} from '../mark';\nimport {Projection} from '../projection';\nimport {Domain, Scale} from '../scale';\nimport {SelectionDef} from '../selection';\nimport {LayoutSizeMixins, NormalizedUnitSpec} from '../spec';\nimport {stack, StackProperties} from '../stack';\nimport {Dict, duplicate} from '../util';\nimport {VgData, VgEncodeEntry, VgLayout, VgSignal} from '../vega.schema';\nimport {AxisIndex} from './axis/component';\nimport {parseUnitAxis} from './axis/parse';\nimport {parseData} from './data/parse';\nimport {assembleLayoutSignals} from './layoutsize/assemble';\nimport {parseUnitLayoutSize} from './layoutsize/parse';\nimport {LegendIndex} from './legend/component';\nimport {normalizeMarkDef} from './mark/init';\nimport {parseMarkGroup} from './mark/mark';\nimport {isLayerModel, Model, ModelWithField} from './model';\nimport {RepeaterValue, replaceRepeaterInEncoding} from './repeater';\nimport {ScaleIndex} from './scale/component';\nimport {assembleTopLevelSignals, assembleUnitSelectionData, assembleUnitSelectionMarks, assembleUnitSelectionSignals, parseUnitSelection} from './selection/selection';\n\n\n/**\n * Internal model of Vega-Lite specification for the compiler.\n */\nexport class UnitModel extends ModelWithField {\n  public readonly type: 'unit' = 'unit';\n  public readonly markDef: MarkDef;\n  public readonly encoding: Encoding<string>;\n\n  public readonly specifiedScales: ScaleIndex = {};\n\n  public readonly stack: StackProperties;\n\n  protected specifiedAxes: AxisIndex = {};\n\n  protected specifiedLegends: LegendIndex = {};\n\n  public specifiedProjection: Projection = {};\n\n  public readonly selection: Dict<SelectionDef> = {};\n  public children: Model[] = [];\n\n  constructor(spec: NormalizedUnitSpec, parent: Model, parentGivenName: string,\n    parentGivenSize: LayoutSizeMixins = {}, repeater: RepeaterValue, config: Config, public fit: boolean) {\n\n    super(spec, parent, parentGivenName, config, repeater, undefined);\n    this.initSize({\n      ...parentGivenSize,\n      ...(spec.width ? {width: spec.width} : {}),\n      ...(spec.height ? {height: spec.height} : {})\n    });\n    const mark = isMarkDef(spec.mark) ? spec.mark.type : spec.mark;\n\n    const encoding = this.encoding = normalizeEncoding(replaceRepeaterInEncoding(spec.encoding || {}, repeater), mark);\n\n    this.markDef = normalizeMarkDef(spec.mark, encoding, config);\n\n    // calculate stack properties\n    this.stack = stack(mark, encoding, this.config.stack);\n    this.specifiedScales = this.initScales(mark, encoding);\n\n    this.specifiedAxes = this.initAxes(encoding);\n    this.specifiedLegends = this.initLegend(encoding);\n    this.specifiedProjection = spec.projection;\n\n    // Selections will be initialized upon parse.\n    this.selection = spec.selection;\n  }\n\n  public get hasProjection(): boolean {\n    const {encoding} = this;\n    const isGeoShapeMark = this.mark === GEOSHAPE;\n    const hasGeoPosition = encoding && GEOPOSITION_CHANNELS.some(\n      channel => isFieldDef(encoding[channel])\n    );\n    return isGeoShapeMark || hasGeoPosition;\n  }\n\n  /**\n   * Return specified Vega-lite scale domain for a particular channel\n   * @param channel\n   */\n  public scaleDomain(channel: ScaleChannel): Domain {\n    const scale = this.specifiedScales[channel];\n    return scale ? scale.domain : undefined;\n  }\n\n  public axis(channel: Channel): Axis {\n    return this.specifiedAxes[channel];\n  }\n\n  public legend(channel: Channel): Legend {\n    return this.specifiedLegends[channel];\n  }\n\n  private initScales(mark: Mark, encoding: Encoding<string>): ScaleIndex {\n    return SCALE_CHANNELS.reduce((scales, channel) => {\n      let fieldDef: FieldDef<string>;\n      let specifiedScale: Scale;\n\n      const channelDef = encoding[channel];\n\n      if (isFieldDef(channelDef)) {\n        fieldDef = channelDef;\n        specifiedScale = channelDef.scale;\n      } else if (hasConditionalFieldDef(channelDef)) {\n        fieldDef = channelDef.condition;\n        specifiedScale = channelDef.condition['scale'];\n      } else if (channel === 'x') {\n        fieldDef = getFieldDef(encoding.x2);\n      } else if (channel === 'y') {\n        fieldDef = getFieldDef(encoding.y2);\n      }\n\n      if (fieldDef) {\n        scales[channel] = specifiedScale || {};\n      }\n      return scales;\n    }, {} as ScaleIndex);\n  }\n\n  private initAxes(encoding: Encoding<string>): AxisIndex {\n    return [X, Y].reduce(function(_axis, channel) {\n      // Position Axis\n\n      // TODO: handle ConditionFieldDef\n      const channelDef = encoding[channel];\n      if (isFieldDef(channelDef) ||\n          (channel === X && isFieldDef(encoding.x2)) ||\n          (channel === Y && isFieldDef(encoding.y2))) {\n\n        const axisSpec = isFieldDef(channelDef) ? channelDef.axis : null;\n\n        // We no longer support false in the schema, but we keep false here for backward compatibility.\n        if (axisSpec !== null && axisSpec !== false) {\n          _axis[channel] = {\n            ...axisSpec\n          };\n        }\n      }\n      return _axis;\n    }, {});\n  }\n\n  private initLegend(encoding: Encoding<string>): LegendIndex {\n    return NONPOSITION_SCALE_CHANNELS.reduce(function(_legend, channel) {\n      const channelDef = encoding[channel];\n      if (channelDef) {\n        const legend = isFieldDef(channelDef) ? channelDef.legend :\n          (hasConditionalFieldDef(channelDef)) ? channelDef.condition['legend'] : null;\n\n        if (legend !== null && legend !== false) {\n          _legend[channel] = {...legend};\n        }\n      }\n\n      return _legend;\n    }, {});\n  }\n\n  public parseData() {\n    this.component.data = parseData(this);\n  }\n\n  public parseLayoutSize() {\n    parseUnitLayoutSize(this);\n  }\n\n  public parseSelection() {\n    this.component.selection = parseUnitSelection(this, this.selection);\n  }\n\n  public parseMarkGroup() {\n    this.component.mark = parseMarkGroup(this);\n  }\n\n  public parseAxisAndHeader() {\n    this.component.axes = parseUnitAxis(this);\n  }\n\n  public assembleSelectionTopLevelSignals(signals: any[]): VgSignal[] {\n    return assembleTopLevelSignals(this, signals);\n  }\n\n  public assembleSelectionSignals(): VgSignal[] {\n    return assembleUnitSelectionSignals(this, []);\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return assembleUnitSelectionData(this, data);\n  }\n\n  public assembleLayout(): VgLayout {\n    return null;\n  }\n\n  public assembleLayoutSignals(): VgSignal[] {\n    return assembleLayoutSignals(this);\n  }\n\n  public assembleMarks() {\n    let marks = this.component.mark || [];\n\n    // If this unit is part of a layer, selections should augment\n    // all in concert rather than each unit individually. This\n    // ensures correct interleaving of clipping and brushed marks.\n    if (!this.parent || !isLayerModel(this.parent)) {\n      marks = assembleUnitSelectionMarks(this, marks);\n    }\n\n    return marks.map(this.correctDataNames);\n  }\n\n  public assembleLayoutSize(): VgEncodeEntry {\n    return {\n      width: this.getSizeSignalRef('width'),\n      height: this.getSizeSignalRef('height')\n    };\n  }\n\n  protected getMapping() {\n    return this.encoding;\n  }\n\n  public toSpec(excludeConfig?: any, excludeData?: any) {\n    const encoding = duplicate(this.encoding);\n    let spec: any;\n\n    spec = {\n      mark: this.markDef,\n      encoding: encoding\n    };\n\n    if (!excludeConfig) {\n      spec.config = duplicate(this.config);\n    }\n\n    if (!excludeData) {\n      spec.data = duplicate(this.data);\n    }\n\n    // remove defaults\n    return spec;\n  }\n\n  public get mark(): Mark {\n    return this.markDef.type;\n  }\n\n  public channelHasField(channel: Channel) {\n    return vlEncoding.channelHasField(this.encoding, channel);\n  }\n\n  public fieldDef(channel: SingleDefChannel): FieldDef<string> {\n    const channelDef = this.encoding[channel] as ChannelDef<string>;\n    return getFieldDef(channelDef);\n  }\n}\n"]}