{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/compile/header/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Utility for generating row / column headers\n */\nimport {isArray} from 'vega-util';\nimport {Config} from '../../config';\nimport {FacetFieldDef} from '../../facet';\nimport {vgField} from '../../fielddef';\nimport {HEADER_LABEL_PROPERTIES, HEADER_LABEL_PROPERTIES_MAP, HEADER_TITLE_PROPERTIES, HEADER_TITLE_PROPERTIES_MAP, HeaderConfig} from '../../header';\nimport {isSortField} from '../../sort';\nimport {keys} from '../../util';\nimport {AxisOrient, VgAxis, VgComparator, VgMarkGroup, VgTitleConfig} from '../../vega.schema';\nimport {formatSignalRef} from '../common';\nimport {sortArrayIndexField} from '../data/calculate';\nimport {Model} from '../model';\n\n\nexport type HeaderChannel = 'row' | 'column';\nexport const HEADER_CHANNELS: HeaderChannel[] = ['row', 'column'];\n\nexport type HeaderType = 'header' | 'footer';\nexport const HEADER_TYPES: HeaderType[] = ['header', 'footer'];\n\n/**\n * A component that represents all header, footers and title of a Vega group with layout directive.\n */\nexport interface LayoutHeaderComponent {\n  title?: string;\n\n  // TODO: repeat and concat can have multiple header / footer.\n  // Need to redesign this part a bit.\n\n  facetFieldDef?: FacetFieldDef<string>;\n\n  /**\n   * An array of header components for headers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For repeat and concat, there can be multiple header components that explicitly list different axes.\n   */\n  header?: HeaderComponent[];\n\n  /**\n   * An array of header components for footers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For repeat and concat, there can be multiple header components that explicitly list different axes.\n   */\n  footer?: HeaderComponent[];\n}\n\n/**\n * A component that represents one group of row/column-header/footer.\n */\nexport interface HeaderComponent {\n\n  labels: boolean;\n\n  sizeSignal: {signal: string};\n\n  axes: VgAxis[];\n}\n\nexport function getHeaderType(orient: AxisOrient) {\n  if (orient === 'top' || orient === 'left') {\n    return 'header';\n  }\n  return 'footer';\n}\n\nexport function getTitleGroup(model: Model, channel: HeaderChannel) {\n  const title = model.component.layoutHeaders[channel].title;\n  const textOrient = channel === 'row' ? 'left' : undefined;\n  const config = model.config? model.config : undefined;\n  const facetFieldDef = model.component.layoutHeaders[channel].facetFieldDef? model.component.layoutHeaders[channel].facetFieldDef : undefined;\n\n  return {\n    name: `${channel}-title`,\n    type: 'group',\n    role: `${channel}-title`,\n    title: {\n      text: title,\n      offset: 10,\n      orient: textOrient,\n      style: 'guide-title',\n      ...getHeaderProperties(config, facetFieldDef, HEADER_TITLE_PROPERTIES, HEADER_TITLE_PROPERTIES_MAP)\n    }\n  };\n}\n\nexport function getHeaderGroups(model: Model, channel: HeaderChannel): VgMarkGroup[] {\n  const layoutHeader = model.component.layoutHeaders[channel];\n  const groups = [];\n  for (const headerType of HEADER_TYPES) {\n    if (layoutHeader[headerType]) {\n      for (const headerCmpt of layoutHeader[headerType]) {\n        groups.push(getHeaderGroup(model, channel, headerType, layoutHeader, headerCmpt));\n      }\n    }\n  }\n  return groups;\n}\n\n// 0, (0,90), 90, (90, 180), 180, (180, 270), 270, (270, 0)\n\nexport function labelAlign(angle: number) {\n  // to keep angle in [0, 360)\n  angle = ((angle % 360) + 360) % 360;\n  if ((angle + 90) % 180 === 0) {  // for 90 and 270\n    return {}; // default center\n  } else if (angle < 90 || 270 < angle) {\n    return {align: {value: 'right'}};\n  } else if (135 <= angle && angle < 225) {\n    return {align: {value: 'left'}};\n  }\n  return {};\n}\n\nexport function labelBaseline(angle: number) {\n  // to keep angle in [0, 360)\n  angle = ((angle % 360) + 360) % 360;\n  if (45 <= angle && angle <= 135) {\n    return {baseline: 'top'};\n  }\n  return {baseline: 'middle'};\n}\n\nfunction getSort(facetFieldDef: FacetFieldDef<string>, channel: 'row' | 'column'): VgComparator {\n  const {sort} = facetFieldDef;\n  if (isSortField(sort)) {\n    return {\n      field: vgField(sort, {expr: 'datum'}),\n      order: sort.order || 'ascending'\n    };\n  } else if (isArray(sort)) {\n    return {\n      field: sortArrayIndexField(facetFieldDef, channel, 'datum'),\n      order: 'ascending'\n    };\n  } else {\n    return {\n      field: vgField(facetFieldDef, {expr: 'datum'}),\n      order: sort || 'ascending'\n    };\n  }\n}\n\nexport function getHeaderGroup(model: Model, channel: HeaderChannel, headerType: HeaderType, layoutHeader: LayoutHeaderComponent, headerCmpt: HeaderComponent) {\n  if (headerCmpt) {\n    let title = null;\n    const {facetFieldDef} = layoutHeader;\n    if (facetFieldDef && headerCmpt.labels) {\n      const {header = {}} = facetFieldDef;\n      const {format, labelAngle} = header;\n      const config = model.config? model.config : undefined;\n\n      const update = {\n        ...labelAlign(labelAngle)\n      };\n\n      title = {\n        text: formatSignalRef(facetFieldDef, format, 'parent', model.config),\n        offset: 10,\n        orient: channel === 'row' ? 'left' : 'top',\n        style: 'guide-label',\n        ...getHeaderProperties(config, facetFieldDef, HEADER_LABEL_PROPERTIES, HEADER_LABEL_PROPERTIES_MAP),\n        ...(keys(update).length > 0 ? {encode: {update}} : {})\n      };\n    }\n\n    const axes = headerCmpt.axes;\n\n    const hasAxes = axes && axes.length > 0;\n    if (title || hasAxes) {\n      const sizeChannel = channel === 'row' ? 'height' : 'width';\n\n\n\n      return {\n        name: model.getName(`${channel}_${headerType}`),\n        type: 'group',\n        role: `${channel}-${headerType}`,\n        ...(layoutHeader.facetFieldDef ? {\n          from: {data: model.getName(channel + '_domain')},\n          sort: getSort(facetFieldDef, channel)\n        } : {}),\n        ...(title ? {title} : {}),\n        ...(headerCmpt.sizeSignal ? {\n          encode: {\n            update: {\n              [sizeChannel]: headerCmpt.sizeSignal\n            }\n          }\n        }: {}),\n        ...(hasAxes ? {axes} : {})\n      };\n    }\n  }\n  return null;\n}\n\nexport function getHeaderProperties(config: Config, facetFieldDef: FacetFieldDef<string>, properties: string[], propertiesMap: {[k in keyof HeaderConfig]: keyof VgTitleConfig}) {\n  const props = {};\n  for (const prop of properties) {\n    if (config && config.header) {\n      if (config.header[prop]) {\n        props[propertiesMap[prop]] = config.header[prop];\n      }\n    }\n    if (facetFieldDef && facetFieldDef.header) {\n      if (facetFieldDef.header[prop]) {\n        props[propertiesMap[prop]] = facetFieldDef.header[prop];\n      }\n    }\n  }\n  return props;\n}\n"]}