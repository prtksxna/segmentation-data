{"version":3,"file":"assemble.js","sourceRoot":"","sources":["../../../../src/compile/axis/assemble.ts"],"names":[],"mappings":"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","sourcesContent":["import {isArray} from 'vega-util';\n\nimport {AXIS_PARTS, AXIS_PROPERTY_TYPE} from '../../axis';\nimport {Config} from '../../config';\nimport {FieldDefBase, title as fieldDefTitle} from '../../fielddef';\nimport {keys} from '../../util';\nimport {VgAxis} from '../../vega.schema';\nimport {AxisComponent, AxisComponentIndex} from './component';\n\nfunction assembleTitle(title: string | FieldDefBase<string>[], config: Config) {\n  if (isArray(title)) {\n    return title.map(fieldDef => fieldDefTitle(fieldDef, config)).join(', ');\n  }\n  return title;\n}\n\nexport function assembleAxis(\n  axisCmpt: AxisComponent,\n  kind: 'main' | 'grid',\n  config: Config,\n  opt: {\n    header: boolean // whether this is called via a header\n  } = {header: false}\n): VgAxis {\n  const {orient, scale, title, zindex, ...axis} = axisCmpt.combine();\n\n  // Remove properties that are not valid for this kind of axis\n  keys(axis).forEach((key) => {\n    const propType = AXIS_PROPERTY_TYPE[key];\n    if (propType && propType !== kind && propType !== 'both') {\n      delete axis[key];\n    }\n  });\n\n  if (kind === 'grid') {\n    if (!axis.grid) {\n      return undefined;\n    }\n\n    // Remove unnecessary encode block\n    if (axis.encode) {\n      // Only need to keep encode block for grid\n      const {grid} = axis.encode;\n      axis.encode = {\n        ...(grid ? {grid} : {})\n      };\n\n      if (keys(axis.encode).length === 0) {\n        delete axis.encode;\n      }\n    }\n\n    return {\n      scale,\n      orient,\n      ...axis,\n      domain: false,\n      labels: false,\n\n      // Always set min/maxExtent to 0 to ensure that `config.axis*.minExtent` and `config.axis*.maxExtent`\n      // would not affect gridAxis\n      maxExtent: 0,\n      minExtent: 0,\n      ticks: false,\n      zindex: zindex !== undefined ? zindex : 0 // put grid behind marks by default\n    };\n  } else { // kind === 'main'\n\n    if (!opt.header && axisCmpt.mainExtracted) {\n      // if mainExtracted has been extracted to a separate facet\n      return undefined;\n    }\n\n    // Remove unnecessary encode block\n    if (axis.encode) {\n      for (const part of AXIS_PARTS) {\n        if (\n          !axisCmpt.hasAxisPart(part)\n        ) {\n          delete axis.encode[part];\n        }\n      }\n      if (keys(axis.encode).length === 0) {\n        delete axis.encode;\n      }\n    }\n\n    const titleString = assembleTitle(title, config);\n\n    return {\n      scale,\n      orient,\n      grid: false,\n      ...(titleString ? {title: titleString} : {}),\n      ...axis,\n      zindex: zindex !== undefined ? zindex : 1 // put axis line above marks by default\n    };\n  }\n}\n\nexport function assembleAxes(axisComponents: AxisComponentIndex, config: Config): VgAxis[] {\n  const {x=[], y=[]} = axisComponents;\n  return [\n    ...x.map(a => assembleAxis(a, 'main', config)),\n    ...x.map(a => assembleAxis(a, 'grid', config)),\n    ...y.map(a => assembleAxis(a, 'main', config)),\n    ...y.map(a => assembleAxis(a, 'grid', config))\n  ].filter(a => a); // filter undefined\n}\n"]}