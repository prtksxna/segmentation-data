{"version":3,"file":"errorband.js","sourceRoot":"","sources":["../../../src/compositemark/errorband.ts"],"names":[],"mappings":";AACA,OAAO,EAAO,IAAI,EAAC,MAAM,SAAS,CAAC;AAInC,OAAO,EAEL,iCAAiC,GAElC,MAAM,UAAU,CAAC;AAClB,OAAO,EAAiC,cAAc,EAAC,MAAM,YAAY,CAAC;AAE1E,MAAM,CAAC,IAAM,SAAS,GAAgB,WAAW,CAAC;AAKlD,IAAM,oBAAoB,GAAwB;IAChD,IAAI,EAAE,CAAC;IACP,OAAO,EAAE,CAAC;CACX,CAAC;AAEF,MAAM,CAAC,IAAM,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC;AA2C1D,MAAM,6BAA6B,IAAiE,EAAE,MAAc;IAC5G,IAAA,4CACqC,EADpC,wBAAS,EAAE,sDAAwB,EAAE,kCAAc,EAAE,gEAA6B,EAAE,oBAAO,EAAE,wBAAS,CACjE;IAE5C,IAAM,iBAAiB,GAAG,iCAAiC,CACvD,OAAO,EACP,cAAc,EACd,wBAAwB,EACxB,6BAA6B,EAC7B,MAAM,CAAC,SAAS,CACnB,CAAC;IAEF,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,SAAS,CAAC;IAC5E,IAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IACxC,IAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IAE3C,4BACK,SAAS,IACZ,SAAS,WAAA,EACT,KAAK,EACA,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,QACrD,iBAAiB,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,CAAC,EAClD,iBAAiB,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,CAAC,KAEvD;AACJ,CAAC","sourcesContent":["import {Config} from '../config';\nimport {Flag, keys} from '../util';\nimport {Encoding} from './../encoding';\nimport {GenericUnitSpec, NormalizedLayerSpec} from './../spec';\nimport {Orient} from './../vega.schema';\nimport {\n  GenericCompositeMarkDef,\n  makeCompositeAggregatePartFactory,\n  PartsMixins,\n} from './common';\nimport {ErrorBarCenter, ErrorBarExtent, errorBarParams} from './errorbar';\n\nexport const ERRORBAND: 'errorband' = 'errorband';\nexport type ErrorBand = typeof ERRORBAND;\n\nexport type ErrorBandPart = 'band' | 'borders';\n\nconst ERRORBAND_PART_INDEX: Flag<ErrorBandPart> = {\n  band: 1,\n  borders: 1\n};\n\nexport const ERRORBAND_PARTS = keys(ERRORBAND_PART_INDEX);\n\nexport type ErrorBandPartsMixins = PartsMixins<ErrorBandPart>;\n\nexport interface ErrorBandConfig extends ErrorBandPartsMixins {\n  /**\n   * The center of the error band. Available options include:\n   * - `\"mean\"`: the mean of the data points.\n   * - `\"median\"`: the median of the data points.\n   *\n   * __Default value:__ `\"mean\"`.\n   * @hide\n   */\n\n   // center is not needed right now but will be added back to the schema if future features require it.\n  center?: ErrorBarCenter;\n\n  /**\n   * The extent of the band. Available options include:\n   * - `\"ci\"`: Extend the band to the confidence interval of the mean.\n   * - `\"stderr\"`: The size of band are set to the value of standard error, extending from the mean.\n   * - `\"stdev\"`: The size of band are set to the value of standard deviation, extending from the mean.\n   * - `\"iqr\"`: Extend the band to the q1 and q3.\n   *\n   * __Default value:__ `\"stderr\"`.\n   */\n  extent?: ErrorBarExtent;\n}\n\nexport type ErrorBandDef = GenericCompositeMarkDef<ErrorBand> & ErrorBandConfig & {\n  /**\n   * Orientation of the error band. This is normally automatically determined, but can be specified when the orientation is ambiguous and cannot be automatically determined.\n   */\n  orient?: Orient;\n};\n\nexport interface ErrorBandConfigMixins {\n  /**\n   * ErrorBand Config\n   */\n  errorband?: ErrorBandConfig;\n}\n\nexport function normalizeErrorBand(spec: GenericUnitSpec<Encoding<string>, ErrorBand | ErrorBandDef>, config: Config): NormalizedLayerSpec {\n  const {transform, continuousAxisChannelDef, continuousAxis, encodingWithoutContinuousAxis, markDef, outerSpec}\n    = errorBarParams(spec, ERRORBAND, config);\n\n  const makeErrorBandPart = makeCompositeAggregatePartFactory<ErrorBandPartsMixins>(\n      markDef,\n      continuousAxis,\n      continuousAxisChannelDef,\n      encodingWithoutContinuousAxis,\n      config.errorband\n  );\n\n  const is2D = spec.encoding.x !== undefined && spec.encoding.y !== undefined;\n  const bandMark = is2D ? 'area' : 'rect';\n  const bordersMark = is2D ? 'line' : 'rule';\n\n  return {\n    ...outerSpec,\n    transform,\n    layer: [\n      ...makeErrorBandPart('band', bandMark, 'lower', 'upper'),\n      ...makeErrorBandPart('borders', bordersMark, 'lower'),\n      ...makeErrorBandPart('borders', bordersMark, 'upper'),\n    ]\n  };\n}\n"]}