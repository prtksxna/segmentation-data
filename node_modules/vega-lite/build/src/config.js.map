{"version":3,"file":"config.js","sourceRoot":"","sources":["../../src/config.ts"],"names":[],"mappings":";;;AAAA,uCAAmC;AAEnC,iDAAgF;AAChF,iCAA6C;AAE7C,mCAA2D;AAC3D,mDAA+B;AAC/B,+BAMgB;AAEhB,iCAAwD;AACxD,yCAAqF;AAErF,iCAAwD;AAExD,+BAAkD;AAmGrC,QAAA,iBAAiB,GAAe;IAC3C,KAAK,EAAE,GAAG;IACV,MAAM,EAAE,GAAG;CACZ,CAAC;AAsCF,SAAgB,UAAU,CAAC,WAAgC;IACzD,OAAO,WAAW,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAChD,CAAC;AAFD,gCAEC;AA+FY,QAAA,aAAa,GAAW;IACnC,OAAO,EAAE,CAAC;IACV,UAAU,EAAE,WAAW;IACvB,UAAU,EAAE,mBAAmB;IAE/B,aAAa,EAAE,QAAQ;IAEvB,IAAI,EAAE,yBAAiB;IAEvB,IAAI,EAAE,IAAI,CAAC,iBAAiB;IAC5B,IAAI,EAAE,EAAE;IACR,GAAG,EAAE,IAAI,CAAC,gBAAgB;IAC1B,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE,EAAE;IACZ,IAAI,EAAE,EAAE;IACR,KAAK,EAAE,EAAE;IACT,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC;IACtB,MAAM,EAAE,EAAE;IACV,IAAI,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC;IACtB,IAAI,EAAE,IAAI,CAAC,iBAAiB;IAC5B,KAAK,EAAE,EAAE;IAET,OAAO,EAAE;QACP,IAAI,EAAE,EAAE;QACR,MAAM,EAAE,GAAG;QACX,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC;QACxB,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE,EAAE;QACR,KAAK,EAAE,IAAI;KACZ;IAED,QAAQ,EAAE;QACR,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,KAAK;KACb;IAED,SAAS,EAAE;QACT,IAAI,EAAE;YACJ,OAAO,EAAE,GAAG;SACb;QACD,OAAO,EAAE,KAAK;KACf;IAED,KAAK,EAAE,0BAAkB;IAEzB,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,EAAE;IACR,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC;IACtB,QAAQ,EAAE,EAAE;IACZ,SAAS,EAAE,EAAE;IACb,OAAO,EAAE,EAAE;IACX,UAAU,EAAE,EAAE;IACd,QAAQ,EAAE,EAAE;IACZ,MAAM,EAAE,4BAAmB;IAE3B,SAAS,EAAE,yBAAsB;IACjC,KAAK,EAAE,EAAE;IAET,KAAK,EAAE,EAAE;CACV,CAAC;AAEF,SAAgB,UAAU,CAAC,MAAc;IACvC,OAAO,gBAAS,CAAC,gBAAS,CAAC,qBAAa,CAAC,EAAE,MAAM,CAAC,CAAC;AACrD,CAAC;AAFD,gCAEC;AAED,IAAM,WAAW,GAAG,CAAC,MAAM,SAAK,sBAAe,CAAsB,CAAC;AAEtE,IAAM,yBAAyB,GAAqB;IAClD,SAAS;IACT,cAAc;IACd,YAAY;IACZ,YAAY;IACZ,OAAO;IACP,OAAO;IACP,WAAW;IACX,eAAe;IACf,SAAyB,CAAC,kCAAkC;CAC7D,CAAC;AAEF,IAAM,+CAA+C,sBACnD,IAAI,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,IACtB,kDAA2C,CAC/C,CAAC;AAEF,SAAgB,sBAAsB,CAAC,MAAc;IACnD,MAAM,GAAG,gBAAS,CAAC,MAAM,CAAC,CAAC;IAE3B,KAAmB,UAAyB,EAAzB,uDAAyB,EAAzB,uCAAyB,EAAzB,IAAyB,EAAE;QAAzC,IAAM,IAAI,kCAAA;QACb,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;KACrB;IAED,2CAA2C;IAC3C,IAAI,MAAM,CAAC,IAAI,EAAE;QACf,KAAmB,UAAoB,EAApB,yBAAA,4BAAoB,EAApB,kCAAoB,EAApB,IAAoB,EAAE;YAApC,IAAM,IAAI,6BAAA;YACb,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;KACF;IACD,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,KAAmB,UAAoB,EAApB,yBAAA,4BAAoB,EAApB,kCAAoB,EAApB,IAAoB,EAAE;YAApC,IAAM,IAAI,6BAAA;YACb,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5B;KACF;IAED,4CAA4C;IAC5C,IAAI,MAAM,CAAC,IAAI,EAAE;QACf,KAAmB,UAA8B,EAA9B,mCAAA,qCAA8B,EAA9B,4CAA8B,EAA9B,IAA8B,EAAE;YAA9C,IAAM,IAAI,uCAAA;YACb,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;KACF;IAED,KAAuB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE;QAA/B,IAAM,QAAQ,oBAAA;QACjB,oCAAoC;QACpC,KAAmB,UAA8B,EAA9B,mCAAA,qCAA8B,EAA9B,4CAA8B,EAA9B,IAA8B,EAAE;YAA9C,IAAM,IAAI,uCAAA;YACb,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;SAC/B;QAED,6CAA6C;QAC7C,IAAM,yBAAyB,GAAG,+CAA+C,CAAC,QAAQ,CAAC,CAAC;QAC5F,IAAI,yBAAyB,EAAE;YAC7B,KAAmB,UAAyB,EAAzB,uDAAyB,EAAzB,uCAAyB,EAAzB,IAAyB,EAAE;gBAAzC,IAAM,IAAI,kCAAA;gBACb,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;aAC/B;SACF;QAED,yFAAyF;QACzF,2EAA2E;QAC3E,wDAAwD;QACxD,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KAClC;IAED,KAAgB,UAAsB,EAAtB,KAAA,oCAAoB,EAAE,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;QAAnC,IAAM,CAAC,SAAA;QACV,uFAAuF;QACvF,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;KAClB;IAED,uDAAuD;IACvD,wEAAwE;IACxE,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;IAE/C,8BAA8B;IAC9B,KAAK,IAAM,IAAI,IAAI,MAAM,EAAE;QACzB,IAAI,oBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7D,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;SACrB;KACF;IAED,OAAO,WAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;AACtD,CAAC;AA/DD,wDA+DC;AAED,SAAS,cAAc,CACrB,MAAc,EACd,IAAsC,EAAE,0BAA0B;AAClE,MAAe,EACf,iBAA0B;IAE1B,IAAM,UAAU,GACd,IAAI,KAAK,OAAO;QACd,CAAC,CAAC,0BAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI;QACvC,CAAC,CAAC,iBAAiB;YACjB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,iBAAiB,CAAC;YACjC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAErB,IAAI,IAAI,KAAK,MAAM,EAAE;QACnB,MAAM,GAAG,MAAM,CAAC,CAAC,iCAAiC;KACnD;IAED,IAAM,KAAK,wBACN,UAAU,EACV,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CACtB,CAAC;IACF,gDAAgD;IAChD,IAAI,WAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;QAC1B,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC;KACtC;IAED,IAAI,CAAC,iBAAiB,EAAE;QACtB,mGAAmG;QACnG,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;KACrB;AACH,CAAC","sourcesContent":["import {isObject} from 'vega-util';\nimport {AxisConfigMixins} from './axis';\nimport {CompositeMarkConfigMixins, getAllCompositeMarks} from './compositemark';\nimport {VL_ONLY_GUIDE_CONFIG} from './guide';\nimport {HeaderConfig} from './header';\nimport {defaultLegendConfig, LegendConfig} from './legend';\nimport * as mark from './mark';\nimport {\n  Mark,\n  MarkConfigMixins,\n  PRIMITIVE_MARKS,\n  VL_ONLY_MARK_CONFIG_PROPERTIES,\n  VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX\n} from './mark';\nimport {ProjectionConfig} from './projection';\nimport {defaultScaleConfig, ScaleConfig} from './scale';\nimport {defaultConfig as defaultSelectionConfig, SelectionConfig} from './selection';\nimport {StackOffset} from './stack';\nimport {extractTitleConfig, TitleConfig} from './title';\nimport {TopLevelProperties} from './toplevelprops';\nimport {duplicate, keys, mergeDeep} from './util';\nimport {StrokeJoin, VgMarkConfig, VgScheme} from './vega.schema';\n\nexport interface ViewConfig {\n  /**\n   * The default width of the single plot or each plot in a trellis plot when the visualization has a continuous (non-ordinal) x-scale or ordinal x-scale with `rangeStep` = `null`.\n   *\n   * __Default value:__ `200`\n   *\n   */\n  width?: number;\n\n  /**\n   * The default height of the single plot or each plot in a trellis plot when the visualization has a continuous (non-ordinal) y-scale with `rangeStep` = `null`.\n   *\n   * __Default value:__ `200`\n   *\n   */\n  height?: number;\n\n  /**\n   * Whether the view should be clipped.\n   */\n  clip?: boolean;\n\n  // FILL_STROKE_CONFIG\n  /**\n   * The fill color.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  fill?: string;\n\n  /**\n   * The fill opacity (value between [0,1]).\n   *\n   * __Default value:__ (none)\n   *\n   */\n  fillOpacity?: number;\n\n  /**\n   * The stroke color.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  stroke?: string;\n\n  /**\n   * The stroke opacity (value between [0,1]).\n   *\n   * __Default value:__ (none)\n   *\n   */\n  strokeOpacity?: number;\n\n  /**\n   * The stroke width, in pixels.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  strokeWidth?: number;\n\n  /**\n   * An array of alternating stroke, space lengths for creating dashed or dotted lines.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  strokeDash?: number[];\n\n  /**\n   * The offset (in pixels) into which to begin drawing with the stroke dash array.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  strokeDashOffset?: number;\n\n  /**\n   * The stroke line join method. One of miter (default), round or bevel.\n   *\n   * __Default value:__ 'miter'\n   *\n   */\n  strokeJoin?: StrokeJoin;\n\n  /**\n   * The stroke line join method. One of miter (default), round or bevel.\n   *\n   * __Default value:__ 'miter'\n   *\n   */\n  strokeMiterLimit?: number;\n}\n\nexport const defaultViewConfig: ViewConfig = {\n  width: 200,\n  height: 200\n};\n\nexport type RangeConfigValue = (number | string)[] | VgScheme | {step: number};\n\nexport type RangeConfig = RangeConfigProps & {[name: string]: RangeConfigValue};\n\nexport interface RangeConfigProps {\n  /**\n   * Default range for _nominal_ (categorical) fields.\n   */\n  category?: string[] | VgScheme;\n\n  /**\n   * Default range for diverging _quantitative_ fields.\n   */\n  diverging?: string[] | VgScheme;\n\n  /**\n   * Default range for _quantitative_ heatmaps.\n   */\n  heatmap?: string[] | VgScheme;\n\n  /**\n   * Default range for _ordinal_ fields.\n   */\n  ordinal?: string[] | VgScheme;\n\n  /**\n   * Default range for _quantitative_ and _temporal_ fields.\n   */\n  ramp?: string[] | VgScheme;\n\n  /**\n   * Default range palette for the `shape` channel.\n   */\n  symbol?: string[];\n}\n\nexport function isVgScheme(rangeConfig: string[] | VgScheme): rangeConfig is VgScheme {\n  return rangeConfig && !!rangeConfig['scheme'];\n}\n\nexport interface VLOnlyConfig {\n  /**\n   * Default axis and legend title for count fields.\n   *\n   * __Default value:__ `'Number of Records'`.\n   *\n   * @type {string}\n   */\n  countTitle?: string;\n\n  /**\n   * Defines how Vega-Lite should handle invalid values (`null` and `NaN`).\n   * - If set to `\"filter\"` (default), all data items with null values will be skipped (for line, trail, and area marks) or filtered (for other marks).\n   * - If `null`, all data items are included. In this case, invalid values will be interpreted as zeroes.\n   */\n  invalidValues?: 'filter' | null;\n\n  /**\n   * Defines how Vega-Lite generates title for fields.  There are three possible styles:\n   * - `\"verbal\"` (Default) - displays function in a verbal style (e.g., \"Sum of field\", \"Year-month of date\", \"field (binned)\").\n   * - `\"function\"` - displays function using parentheses and capitalized texts (e.g., \"SUM(field)\", \"YEARMONTH(date)\", \"BIN(field)\").\n   * - `\"plain\"` - displays only the field name without functions (e.g., \"field\", \"date\", \"field\").\n   */\n  fieldTitle?: 'verbal' | 'functional' | 'plain';\n\n  /**\n   * D3 Number format for guide labels and text marks. For example \"s\" for SI units. Use [D3's number format pattern](https://github.com/d3/d3-format#locale_format).\n   */\n  numberFormat?: string;\n\n  /**\n   * Default time format for raw time values (without time units) in text marks, legend labels and header labels.\n   *\n   * __Default value:__ `\"%b %d, %Y\"`\n   * __Note:__ Axes automatically determine format each label automatically so this config would not affect axes.\n   */\n  timeFormat?: string;\n\n  /** Default properties for [single view plots](https://vega.github.io/vega-lite/docs/spec.html#single). */\n  view?: ViewConfig;\n\n  /**\n   * Scale configuration determines default properties for all [scales](https://vega.github.io/vega-lite/docs/scale.html). For a full list of scale configuration options, please see the [corresponding section of the scale documentation](https://vega.github.io/vega-lite/docs/scale.html#config).\n   */\n  scale?: ScaleConfig;\n\n  /** An object hash for defining default properties for each type of selections. */\n  selection?: SelectionConfig;\n\n  /** Default stack offset for stackable mark. */\n  stack?: StackOffset;\n}\n\nexport interface StyleConfigIndex {\n  [style: string]: VgMarkConfig;\n}\n\nexport interface Config\n  extends TopLevelProperties,\n    VLOnlyConfig,\n    MarkConfigMixins,\n    CompositeMarkConfigMixins,\n    AxisConfigMixins {\n  /**\n   * An object hash that defines default range arrays or schemes for using with scales.\n   * For a full list of scale range configuration options, please see the [corresponding section of the scale documentation](https://vega.github.io/vega-lite/docs/scale.html#config).\n   */\n  range?: RangeConfig;\n\n  /**\n   * Legend configuration, which determines default properties for all [legends](https://vega.github.io/vega-lite/docs/legend.html). For a full list of legend configuration options, please see the [corresponding section of in the legend documentation](https://vega.github.io/vega-lite/docs/legend.html#config).\n   */\n  legend?: LegendConfig;\n\n  /**\n   * Header configuration, which determines default properties for all [header](https://vega.github.io/vega-lite/docs/header.html). For a full list of header configuration options, please see the [corresponding section of in the header documentation](https://vega.github.io/vega-lite/docs/header.html#config).\n   */\n  header?: HeaderConfig;\n\n  /**\n   * Title configuration, which determines default properties for all [titles](https://vega.github.io/vega-lite/docs/title.html). For a full list of title configuration options, please see the [corresponding section of the title documentation](https://vega.github.io/vega-lite/docs/title.html#config).\n   */\n  title?: TitleConfig;\n\n  /**\n   * Projection configuration, which determines default properties for all [projections](https://vega.github.io/vega-lite/docs/projection.html). For a full list of projection configuration options, please see the [corresponding section of the projection documentation](https://vega.github.io/vega-lite/docs/projection.html#config).\n   */\n  projection?: ProjectionConfig;\n\n  /** An object hash that defines key-value mappings to determine default properties for marks with a given [style](https://vega.github.io/vega-lite/docs/mark.html#mark-def).  The keys represent styles names; the values have to be valid [mark configuration objects](https://vega.github.io/vega-lite/docs/mark.html#config).  */\n  style?: StyleConfigIndex;\n}\n\nexport const defaultConfig: Config = {\n  padding: 5,\n  timeFormat: '%b %d, %Y',\n  countTitle: 'Number of Records',\n\n  invalidValues: 'filter',\n\n  view: defaultViewConfig,\n\n  mark: mark.defaultMarkConfig,\n  area: {},\n  bar: mark.defaultBarConfig,\n  circle: {},\n  geoshape: {},\n  line: {},\n  point: {},\n  rect: {},\n  rule: {color: 'black'}, // Need this to override default color in mark config\n  square: {},\n  text: {color: 'black'}, // Need this to override default color in mark config\n  tick: mark.defaultTickConfig,\n  trail: {},\n\n  boxplot: {\n    size: 14,\n    extent: 1.5,\n    box: {},\n    median: {color: 'white'},\n    outliers: {},\n    rule: {},\n    ticks: null\n  },\n\n  errorbar: {\n    center: 'mean',\n    rule: true,\n    ticks: false\n  },\n\n  errorband: {\n    band: {\n      opacity: 0.3\n    },\n    borders: false\n  },\n\n  scale: defaultScaleConfig,\n\n  projection: {},\n\n  axis: {},\n  axisX: {},\n  axisY: {minExtent: 30},\n  axisLeft: {},\n  axisRight: {},\n  axisTop: {},\n  axisBottom: {},\n  axisBand: {},\n  legend: defaultLegendConfig,\n\n  selection: defaultSelectionConfig,\n  style: {},\n\n  title: {}\n};\n\nexport function initConfig(config: Config) {\n  return mergeDeep(duplicate(defaultConfig), config);\n}\n\nconst MARK_STYLES = ['view', ...PRIMITIVE_MARKS] as ('view' | Mark)[];\n\nconst VL_ONLY_CONFIG_PROPERTIES: (keyof Config)[] = [\n  'padding',\n  'numberFormat',\n  'timeFormat',\n  'countTitle',\n  'stack',\n  'scale',\n  'selection',\n  'invalidValues',\n  'overlay' as keyof Config // FIXME: Redesign and unhide this\n];\n\nconst VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {\n  view: ['width', 'height'],\n  ...VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX\n};\n\nexport function stripAndRedirectConfig(config: Config) {\n  config = duplicate(config);\n\n  for (const prop of VL_ONLY_CONFIG_PROPERTIES) {\n    delete config[prop];\n  }\n\n  // Remove Vega-Lite only axis/legend config\n  if (config.axis) {\n    for (const prop of VL_ONLY_GUIDE_CONFIG) {\n      delete config.axis[prop];\n    }\n  }\n  if (config.legend) {\n    for (const prop of VL_ONLY_GUIDE_CONFIG) {\n      delete config.legend[prop];\n    }\n  }\n\n  // Remove Vega-Lite only generic mark config\n  if (config.mark) {\n    for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n      delete config.mark[prop];\n    }\n  }\n\n  for (const markType of MARK_STYLES) {\n    // Remove Vega-Lite-only mark config\n    for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n      delete config[markType][prop];\n    }\n\n    // Remove Vega-Lite only mark-specific config\n    const vlOnlyMarkSpecificConfigs = VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX[markType];\n    if (vlOnlyMarkSpecificConfigs) {\n      for (const prop of vlOnlyMarkSpecificConfigs) {\n        delete config[markType][prop];\n      }\n    }\n\n    // Redirect mark config to config.style so that mark config only affect its own mark type\n    // without affecting other marks that share the same underlying Vega marks.\n    // For example, config.rect should not affect bar marks.\n    redirectConfig(config, markType);\n  }\n\n  for (const m of getAllCompositeMarks()) {\n    // Clean up the composite mark config as we don't need them in the output specs anymore\n    delete config[m];\n  }\n\n  // Redirect config.title -- so that title config do not\n  // affect header labels, which also uses `title` directive to implement.\n  redirectConfig(config, 'title', 'group-title');\n\n  // Remove empty config objects\n  for (const prop in config) {\n    if (isObject(config[prop]) && keys(config[prop]).length === 0) {\n      delete config[prop];\n    }\n  }\n\n  return keys(config).length > 0 ? config : undefined;\n}\n\nfunction redirectConfig(\n  config: Config,\n  prop: Mark | 'title' | 'view' | string, // string = composite mark\n  toProp?: string,\n  compositeMarkPart?: string\n) {\n  const propConfig: VgMarkConfig =\n    prop === 'title'\n      ? extractTitleConfig(config.title).mark\n      : compositeMarkPart\n        ? config[prop][compositeMarkPart]\n        : config[prop];\n\n  if (prop === 'view') {\n    toProp = 'cell'; // View's default style is \"cell\"\n  }\n\n  const style: VgMarkConfig = {\n    ...propConfig,\n    ...config.style[prop]\n  };\n  // set config.style if it is not an empty object\n  if (keys(style).length > 0) {\n    config.style[toProp || prop] = style;\n  }\n\n  if (!compositeMarkPart) {\n    // For composite mark, so don't delete the whole config yet as we have to do multiple redirections.\n    delete config[prop];\n  }\n}\n"]}