{"version":3,"file":"multi.js","sourceRoot":"","sources":["../../../../src/compile/selection/multi.ts"],"names":[],"mappings":"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","sourcesContent":["import {stringValue} from 'vega-util';\n\nimport {accessPathWithDatum} from '../../util';\nimport {UnitModel} from '../unit';\nimport {SelectionCompiler, SelectionComponent, TUPLE, unitName} from './selection';\nimport nearest from './transforms/nearest';\n\nexport function signals(model: UnitModel, selCmpt: SelectionComponent) {\n  const proj = selCmpt.project;\n  const datum = nearest.has(selCmpt) ? '(item().isVoronoi ? datum.datum : datum)' : 'datum';\n  const bins: string[] = [];\n  const encodings = proj\n    .map(p => stringValue(p.channel))\n    .filter(e => e)\n    .join(', ');\n  const fields = proj.map(p => stringValue(p.field)).join(', ');\n  const values = proj\n    .map(p => {\n      const channel = p.channel;\n      const fieldDef = model.fieldDef(channel);\n      // Binned fields should capture extents, for a range test against the raw field.\n      return fieldDef && fieldDef.bin\n        ? (bins.push(p.field),\n          `[${accessPathWithDatum(model.vgField(channel, {}), datum)}, ` +\n            `${accessPathWithDatum(model.vgField(channel, {binSuffix: 'end'}), datum)}]`)\n        : `${accessPathWithDatum(p.field, datum)}`;\n    })\n    .join(', ');\n\n  // Only add a discrete selection to the store if a datum is present _and_\n  // the interaction isn't occurring on a group mark. This guards against\n  // polluting interactive state with invalid values in faceted displays\n  // as the group marks are also data-driven. We force the update to account\n  // for constant null states but varying toggles (e.g., shift-click in\n  // whitespace followed by a click in whitespace; the store should only\n  // be cleared on the second click).\n  return [\n    {\n      name: selCmpt.name + TUPLE,\n      value: {},\n      on: [\n        {\n          events: selCmpt.events,\n          update:\n            `datum && item().mark.marktype !== 'group' ? ` +\n            `{unit: ${unitName(model)}, encodings: [${encodings}], ` +\n            `fields: [${fields}], values: [${values}]` +\n            (bins.length ? ', ' + bins.map(b => `${stringValue('bin_' + b)}: 1`).join(', ') : '') +\n            '} : null',\n          force: true\n        }\n      ]\n    }\n  ];\n}\n\nconst multi: SelectionCompiler = {\n  predicate: 'vlMulti',\n  scaleDomain: 'vlMultiDomain',\n\n  signals: signals,\n\n  modifyExpr: (model, selCmpt) => {\n    const tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' + (selCmpt.resolve === 'global' ? 'null' : `{unit: ${unitName(model)}}`);\n  }\n};\n\nexport default multi;\n"]}