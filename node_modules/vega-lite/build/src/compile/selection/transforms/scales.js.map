{"version":3,"file":"scales.js","sourceRoot":"","sources":["../../../../../src/compile/selection/transforms/scales.ts"],"names":[],"mappings":"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","sourcesContent":["import {stringValue} from 'vega-util';\nimport {Channel, X, Y} from '../../../channel';\nimport * as log from '../../../log';\nimport {hasContinuousDomain, isBinScale} from '../../../scale';\nimport {UnitModel} from '../../unit';\nimport {channelSignalName} from '../selection';\nimport {TransformCompiler} from './transforms';\n\nconst scaleBindings: TransformCompiler = {\n  has: selCmpt => {\n    return selCmpt.type === 'interval' && selCmpt.resolve === 'global' && selCmpt.bind && selCmpt.bind === 'scales';\n  },\n\n  parse: (model, selDef, selCmpt) => {\n    const bound: Channel[] = (selCmpt.scales = []);\n\n    selCmpt.project.forEach(p => {\n      const channel = p.channel;\n      const scale = model.getScaleComponent(channel);\n      const scaleType = scale ? scale.get('type') : undefined;\n\n      if (!scale || !hasContinuousDomain(scaleType) || isBinScale(scaleType)) {\n        log.warn(log.message.SCALE_BINDINGS_CONTINUOUS);\n        return;\n      }\n\n      scale.set('domainRaw', {signal: channelSignalName(selCmpt, channel, 'data')}, true);\n      bound.push(channel);\n\n      // Bind both x/y for diag plot of repeated views.\n      if (model.repeater && model.repeater.row === model.repeater.column) {\n        const scale2 = model.getScaleComponent(channel === X ? Y : X);\n        scale2.set('domainRaw', {signal: channelSignalName(selCmpt, channel, 'data')}, true);\n      }\n    });\n  },\n\n  topLevelSignals: (model, selCmpt, signals) => {\n    // Top-level signals are only needed when coordinating composed views.\n    if (!model.parent) {\n      return signals;\n    }\n\n    const channels = selCmpt.scales.filter(channel => {\n      return !signals.filter(s => s.name === channelSignalName(selCmpt, channel, 'data')).length;\n    });\n\n    return signals.concat(\n      channels.map(channel => {\n        return {name: channelSignalName(selCmpt, channel, 'data')};\n      })\n    );\n  },\n\n  signals: (model, selCmpt, signals) => {\n    // Nested signals need only push to top-level signals when within composed views.\n    if (model.parent) {\n      selCmpt.scales.forEach(channel => {\n        const signal = signals.filter(s => s.name === channelSignalName(selCmpt, channel, 'data'))[0];\n\n        signal.push = 'outer';\n        delete signal.value;\n        delete signal.update;\n      });\n    }\n\n    return signals;\n  }\n};\n\nexport default scaleBindings;\n\nexport function domain(model: UnitModel, channel: Channel) {\n  const scale = stringValue(model.scaleName(channel));\n  return `domain(${scale})`;\n}\n"]}