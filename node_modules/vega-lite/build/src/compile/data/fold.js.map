{"version":3,"file":"fold.js","sourceRoot":"","sources":["../../../../src/compile/data/fold.ts"],"names":[],"mappings":";;;AAEA,mCAA2C;AAC3C,uCAAuD;AAEvD;;GAEG;AACH;IAAuC,6CAAa;IAKlD,2BAAY,MAAoB,EAAU,SAAwB;QAAlE,YACE,kBAAM,MAAM,CAAC,SAGd;QAJyC,eAAS,GAAT,SAAS,CAAe;QAEhE,IAAM,WAAW,GAAG,KAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAChE,KAAI,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC;;IAC3E,CAAC;IARM,iCAAK,GAAZ;QACE,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACvE,CAAC;IAQM,0CAAc,GAArB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,IAAI;YAC3C,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YACpB,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAEM,gCAAI,GAAX;QACE,OAAO,mBAAiB,WAAI,CAAC,IAAI,CAAC,SAAS,CAAG,CAAC;IACjD,CAAC;IAEM,oCAAQ,GAAf;QACQ,IAAA,mBAA2B,EAA1B,cAAI,EAAE,UAAE,CAAmB;QAClC,IAAM,MAAM,GAAoB;YAC9B,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,IAAI;YACZ,EAAE,IAAA;SACH,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IACH,wBAAC;AAAD,CAAC,AA/BD,CAAuC,wBAAa,GA+BnD;AA/BY,8CAAiB","sourcesContent":["import {FoldTransform as VgFoldTransform} from 'vega';\nimport {FoldTransform} from '../../transform';\nimport {duplicate, hash} from '../../util';\nimport {DataFlowNode, TransformNode} from './dataflow';\n\n/**\n * A class for flatten transform nodes\n */\nexport class FoldTransformNode extends TransformNode {\n  public clone() {\n    return new FoldTransformNode(this.parent, duplicate(this.transform));\n  }\n\n  constructor(parent: DataFlowNode, private transform: FoldTransform) {\n    super(parent);\n    const specifiedAs = this.transform.as || [undefined, undefined];\n    this.transform.as = [specifiedAs[0] || 'key', specifiedAs[1] || 'value'];\n  }\n\n  public producedFields() {\n    return this.transform.as.reduce((result, item) => {\n      result[item] = true;\n      return result;\n    }, {});\n  }\n\n  public hash() {\n    return `FoldTransform ${hash(this.transform)}`;\n  }\n\n  public assemble(): VgFoldTransform {\n    const {fold, as} = this.transform;\n    const result: VgFoldTransform = {\n      type: 'fold',\n      fields: fold,\n      as\n    };\n    return result;\n  }\n}\n"]}