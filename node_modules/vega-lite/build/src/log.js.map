{"version":3,"file":"log.js","sourceRoot":"","sources":["../../src/log.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Vega-Lite's singleton logger utility.\n */\n\nimport {AggregateOp} from 'vega';\nimport {logger, LoggerInterface, Warn} from 'vega-util';\nimport {Channel, GeoPositionChannel} from './channel';\nimport {CompositeMark} from './compositemark';\nimport {ErrorBarCenter, ErrorBarExtent} from './compositemark/errorbar';\nimport {DateTime, DateTimeExpr} from './datetime';\nimport {Aggregate, FieldDef} from './fielddef';\nimport {Mark} from './mark';\nimport {Projection} from './projection';\nimport {ScaleType} from './scale';\nimport {Type} from './type';\nimport {stringify} from './util';\nimport {VgSortField} from './vega.schema';\n\nexport {LoggerInterface} from 'vega-util';\n\n/**\n * Main (default) Vega Logger instance for Vega-Lite\n */\nconst main = logger(Warn);\nlet current: LoggerInterface = main;\n\n/**\n * Logger tool for checking if the code throws correct warning\n */\nexport class LocalLogger implements LoggerInterface {\n  public warns: any[] = [];\n  public infos: any[] = [];\n  public debugs: any[] = [];\n\n  public level() {\n    return this;\n  }\n\n  public warn(...args: any[]) {\n    this.warns.push(...args);\n    return this;\n  }\n\n  public info(...args: any[]) {\n    this.infos.push(...args);\n    return this;\n  }\n\n  public debug(...args: any[]) {\n    this.debugs.push(...args);\n    return this;\n  }\n}\n\nexport function wrap(f: (logger: LocalLogger) => void) {\n  return () => {\n    current = new LocalLogger();\n    f(current as LocalLogger);\n    reset();\n  };\n}\n\n/**\n * Set the singleton logger to be a custom logger\n */\nexport function set(newLogger: LoggerInterface) {\n  current = newLogger;\n  return current;\n}\n\n/**\n * Reset the main logger to use the default Vega Logger\n */\nexport function reset() {\n  current = main;\n  return current;\n}\n\nexport function warn(..._: any[]) {\n  current.warn.apply(current, arguments);\n}\n\nexport function info(..._: any[]) {\n  current.info.apply(current, arguments);\n}\n\nexport function debug(..._: any[]) {\n  current.debug.apply(current, arguments);\n}\n\n/**\n * Collection of all Vega-Lite Error Messages\n */\nexport namespace message {\n  export const INVALID_SPEC = 'Invalid spec';\n\n  // FIT\n  export const FIT_NON_SINGLE = 'Autosize \"fit\" only works for single views and layered views.';\n\n  export const CANNOT_FIX_RANGE_STEP_WITH_FIT = 'Cannot use a fixed value of \"rangeStep\" when \"autosize\" is \"fit\".';\n\n  // SELECTION\n  export function cannotProjectOnChannelWithoutField(channel: Channel) {\n    return `Cannot project a selection on encoding channel \"${channel}\", which has no field.`;\n  }\n\n  export function nearestNotSupportForContinuous(mark: string) {\n    return `The \"nearest\" transform is not supported for ${mark} marks.`;\n  }\n\n  export function selectionNotSupported(mark: CompositeMark) {\n    return `Selection not supported for ${mark} yet`;\n  }\n\n  export function selectionNotFound(name: string) {\n    return `Cannot find a selection named \"${name}\"`;\n  }\n\n  export const SCALE_BINDINGS_CONTINUOUS =\n    'Scale bindings are currently only supported for scales with unbinned, continuous domains.';\n\n  // REPEAT\n  export function noSuchRepeatedValue(field: string) {\n    return `Unknown repeated value \"${field}\".`;\n  }\n\n  // CONCAT\n  export const CONCAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in concatenated views.';\n\n  // REPEAT\n  export const REPEAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in repeated views.';\n\n  // TITLE\n  export function cannotSetTitleAnchor(type: string) {\n    return `Cannot set title \"anchor\" for a ${type} spec`;\n  }\n\n  // DATA\n  export function unrecognizedParse(p: string) {\n    return `Unrecognized parse \"${p}\".`;\n  }\n\n  export function differentParse(field: string, local: string, ancestor: string) {\n    return `An ancestor parsed field \"${field}\" as ${ancestor} but a child wants to parse the field as ${local}.`;\n  }\n\n  // TRANSFORMS\n  export function invalidTransformIgnored(transform: any) {\n    return `Ignoring an invalid transform: ${stringify(transform)}.`;\n  }\n\n  export const NO_FIELDS_NEEDS_AS =\n    'If \"from.fields\" is not specified, \"as\" has to be a string that specifies the key to be used for the data from the secondary source.';\n\n  // ENCODING & FACET\n\n  export function encodingOverridden(channels: Channel[]) {\n    return `Layer's shared ${channels.join(',')} channel ${channels.length === 1 ? 'is' : 'are'} overriden`;\n  }\n  export function projectionOverridden(opt: {parentProjection: Projection; projection: Projection}) {\n    const {parentProjection, projection} = opt;\n    return `Layer's shared projection ${stringify(parentProjection)} is overridden by a child projection ${stringify(\n      projection\n    )}.`;\n  }\n\n  export function primitiveChannelDef(\n    channel: Channel,\n    type: 'string' | 'number' | 'boolean',\n    value: string | number | boolean\n  ) {\n    return `Channel ${channel} is a ${type}. Converted to {value: ${stringify(value)}}.`;\n  }\n\n  export function invalidFieldType(type: Type) {\n    return `Invalid field type \"${type}\"`;\n  }\n\n  export function nonZeroScaleUsedWithLengthMark(\n    mark: 'bar' | 'area',\n    channel: Channel,\n    opt: {scaleType?: ScaleType; zeroFalse?: boolean}\n  ) {\n    const scaleText = opt.scaleType\n      ? `${opt.scaleType} scale`\n      : opt.zeroFalse\n        ? 'scale with zero=false'\n        : 'scale with custom domain that excludes zero';\n\n    return `A ${scaleText} is used to encode ${mark}'s ${channel}. This can be misleading as the ${\n      channel === 'x' ? 'width' : 'height'\n    } of the ${mark} can be arbitrary based on the scale domain. You may want to use point mark instead.`;\n  }\n\n  export function invalidFieldTypeForCountAggregate(type: Type, aggregate: string) {\n    return `Invalid field type \"${type}\" for aggregate: \"${aggregate}\", using \"quantitative\" instead.`;\n  }\n\n  export function invalidAggregate(aggregate: AggregateOp | string) {\n    return `Invalid aggregation operator \"${aggregate}\"`;\n  }\n\n  export function emptyOrInvalidFieldType(type: Type | string, channel: Channel, newType: Type) {\n    return `Invalid field type \"${type}\" for channel \"${channel}\", using \"${newType}\" instead.`;\n  }\n  export function droppingColor(type: 'encoding' | 'property', opt: {fill?: boolean; stroke?: boolean}) {\n    const {fill, stroke} = opt;\n    return (\n      `Dropping color ${type} as the plot also has ` + (fill && stroke ? 'fill and stroke' : fill ? 'fill' : 'stroke')\n    );\n  }\n\n  export function emptyFieldDef(fieldDef: FieldDef<string>, channel: Channel) {\n    return `Dropping ${stringify(fieldDef)} from channel \"${channel}\" since it does not contain data field or value.`;\n  }\n  export function latLongDeprecated(channel: Channel, type: Type, newChannel: GeoPositionChannel) {\n    return `${channel}-encoding with type ${type} is deprecated. Replacing with ${newChannel}-encoding.`;\n  }\n\n  export const LINE_WITH_VARYING_SIZE =\n    'Line marks cannot encode size with a non-groupby field. You may want to use trail marks instead.';\n\n  export function incompatibleChannel(channel: Channel, markOrFacet: Mark | 'facet' | CompositeMark, when?: string) {\n    return `${channel} dropped as it is incompatible with \"${markOrFacet}\"${when ? ` when ${when}` : ''}.`;\n  }\n\n  export function invalidEncodingChannel(channel: string) {\n    return `${channel}-encoding is dropped as ${channel} is not a valid encoding channel.`;\n  }\n\n  export function facetChannelShouldBeDiscrete(channel: string) {\n    return `${channel} encoding should be discrete (ordinal / nominal / binned).`;\n  }\n\n  export function discreteChannelCannotEncode(channel: Channel, type: Type) {\n    return `Using discrete channel \"${channel}\" to encode \"${type}\" field can be misleading as it does not encode ${\n      type === 'ordinal' ? 'order' : 'magnitude'\n    }.`;\n  }\n\n  // Mark\n  export const BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL =\n    'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';\n\n  export function lineWithRange(hasX2: boolean, hasY2: boolean) {\n    const channels = hasX2 && hasY2 ? 'x2 and y2' : hasX2 ? 'x2' : 'y2';\n    return `Line mark is for continuous lines and thus cannot be used with ${channels}. We will use the rule mark (line segments) instead.`;\n  }\n\n  export function orientOverridden(original: string, actual: string) {\n    return `Specified orient \"${original}\" overridden with \"${actual}\"`;\n  }\n\n  // SCALE\n  export const CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN =\n    'custom domain scale cannot be unioned with default field-based domain';\n\n  export function cannotUseScalePropertyWithNonColor(prop: string) {\n    return `Cannot use the scale property \"${prop}\" with non-color channel.`;\n  }\n\n  export function unaggregateDomainHasNoEffectForRawField(fieldDef: FieldDef<string>) {\n    return `Using unaggregated domain with raw field has no effect (${stringify(fieldDef)}).`;\n  }\n\n  export function unaggregateDomainWithNonSharedDomainOp(aggregate: string) {\n    return `Unaggregated domain not applicable for \"${aggregate}\" since it produces values outside the origin domain of the source data.`;\n  }\n\n  export function unaggregatedDomainWithLogScale(fieldDef: FieldDef<string>) {\n    return `Unaggregated domain is currently unsupported for log scale (${stringify(fieldDef)}).`;\n  }\n\n  export function cannotApplySizeToNonOrientedMark(mark: Mark) {\n    return `Cannot apply size to non-oriented mark \"${mark}\".`;\n  }\n\n  export function rangeStepDropped(channel: Channel) {\n    return `rangeStep for \"${channel}\" is dropped as top-level ${channel === 'x' ? 'width' : 'height'} is provided.`;\n  }\n\n  export function scaleTypeNotWorkWithChannel(channel: Channel, scaleType: ScaleType, defaultScaleType: ScaleType) {\n    return `Channel \"${channel}\" does not work with \"${scaleType}\" scale. We are using \"${defaultScaleType}\" scale instead.`;\n  }\n\n  export function scaleTypeNotWorkWithFieldDef(scaleType: ScaleType, defaultScaleType: ScaleType) {\n    return `FieldDef does not work with \"${scaleType}\" scale. We are using \"${defaultScaleType}\" scale instead.`;\n  }\n\n  export function scalePropertyNotWorkWithScaleType(scaleType: ScaleType, propName: string, channel: Channel) {\n    return `${channel}-scale's \"${propName}\" is dropped as it does not work with ${scaleType} scale.`;\n  }\n\n  export function scaleTypeNotWorkWithMark(mark: Mark, scaleType: ScaleType) {\n    return `Scale type \"${scaleType}\" does not work with mark \"${mark}\".`;\n  }\n\n  export function mergeConflictingProperty<T>(\n    property: string | number | symbol,\n    propertyOf: string | number | symbol,\n    v1: T,\n    v2: T\n  ) {\n    return `Conflicting ${propertyOf.toString()} property \"${property.toString()}\" (${stringify(v1)} and ${stringify(\n      v2\n    )}).  Using ${stringify(v1)}.`;\n  }\n\n  export function independentScaleMeansIndependentGuide(channel: Channel) {\n    return `Setting the scale to be independent for \"${channel}\" means we also have to set the guide (axis or legend) to be independent.`;\n  }\n\n  export function domainSortDropped(sort: VgSortField) {\n    return `Dropping sort property ${stringify(sort)} as unioned domains only support boolean or op 'count'.`;\n  }\n\n  export const UNABLE_TO_MERGE_DOMAINS = 'Unable to merge domains';\n\n  export const MORE_THAN_ONE_SORT =\n    'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';\n\n  // AXIS\n  export const INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';\n\n  // STACK\n  export function cannotStackRangedMark(channel: Channel) {\n    return `Cannot stack \"${channel}\" if there is already \"${channel}2\"`;\n  }\n\n  export function cannotStackNonLinearScale(scaleType: ScaleType) {\n    return `Cannot stack non-linear scale (${scaleType})`;\n  }\n\n  export function stackNonSummativeAggregate(aggregate: string) {\n    return `Stacking is applied even though the aggregate function is non-summative (\"${aggregate}\")`;\n  }\n\n  // TIMEUNIT\n  export function invalidTimeUnit(unitName: string, value: string | number) {\n    return `Invalid ${unitName}: ${stringify(value)}`;\n  }\n\n  export function dayReplacedWithDate(fullTimeUnit: string) {\n    return `Time unit \"${fullTimeUnit}\" is not supported. We are replacing it with ${fullTimeUnit.replace(\n      'day',\n      'date'\n    )}.`;\n  }\n\n  export function droppedDay(d: DateTime | DateTimeExpr) {\n    return `Dropping day from datetime ${stringify(d)} as day cannot be combined with other units.`;\n  }\n\n  export function errorBarCenterAndExtentAreNotNeeded(center: ErrorBarCenter, extent: ErrorBarExtent) {\n    return `${extent ? 'extent ' : ''}${extent && center ? 'and ' : ''}${center ? 'center ' : ''}${\n      extent && center ? 'are ' : 'is '\n    }not needed when data are aggregated.`;\n  }\n\n  export function errorBarCenterIsUsedWithWrongExtent(\n    center: ErrorBarCenter,\n    extent: ErrorBarExtent,\n    mark: 'errorbar' | 'errorband'\n  ) {\n    return `${center} is not usually used with ${extent} for ${mark}.`;\n  }\n\n  export function errorBarContinuousAxisHasCustomizedAggregate(aggregate: Aggregate, compositeMark: CompositeMark) {\n    return `Continuous axis should not have customized aggregation function ${aggregate}; ${compositeMark} already agregates the axis.`;\n  }\n\n  export function errorBarCenterIsNotNeeded(extent: ErrorBarExtent, mark: 'errorbar' | 'errorband') {\n    return `Center is not needed to be specified in ${mark} when extent is ${extent}.`;\n  }\n\n  export function errorBand1DNotSupport(property: 'interpolate' | 'tension') {\n    return `1D error band does not support ${property}`;\n  }\n\n  // CHANNEL\n  export function channelRequiredForBinned(channel: Channel) {\n    return `Channel ${channel} is required for \"binned\" bin`;\n  }\n\n  export function domainRequiredForThresholdScale(channel: Channel) {\n    return `Domain for ${channel} is required for threshold scale`;\n  }\n}\n"]}